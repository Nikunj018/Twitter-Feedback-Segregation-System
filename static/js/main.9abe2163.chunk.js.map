{"version":3,"sources":["components/Button/Button.js","components/Header/Header.js","pages/Home/Home.js","components/Input/Input.js","components/Tweet/Tweet.js","components/Chart/ChartPie.js","components/Chart/ChartLine.js","components/Loader/Loader.js","pages/Search/country_codes.js","components/SearchPageSVG/SearchPageSVG.js","components/Map/Map.js","pages/Search/Search.js","assets/Profile/Ali.jpg","assets/Profile/Nikunj.jpg","assets/Profile/Vaspar.jpg","assets/Profile/Rishabh.jpg","assets/Profile/Vidit.jpg","assets/Profile/profile-bg.jpg","components/Card/Card.js","pages/Team/Team.js","App.js","index.js"],"names":["Button","text","onClick","className","Header","props","state","clicked","React","createRef","refers","openMenu","bind","menus","forEach","menu","event","ref","this","setState","stopPropagation","current","classList","toggle","hasOwnProperty","activeElement","liElements","map","index","window","location","pathname","slice","link","id","to","activeMenu","viewBox","fill","xmlns","d","fillOpacity","Component","Home","width","height","opacity","stroke","Input","value","handleOnChange","target","type","placeholder","onChange","icon","Tweet","url","split","Chart","chartData","data","options","title","display","displayTitle","fontSize","legend","displayLegend","position","legendPosition","defaultProps","console","log","chartLineData","chartLineLabel","labels","datasets","label","lineTension","backgroundColor","borderColor","borderWidth","scales","x","Loader","strokeWidth","strokeMiterlimit","countryCodeNameMap","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","MS","ME","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","SH","KN","LC","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","countryNames","Object","values","countryCodes","keys","hasJapanese","test","hasKorean","hasChinese","hasIndian","hasSinhala","hasBurmese","hasThai","hasLao","hasKhmer","hasArmeninan","hasGeorgian","hasGreek","hasHebrew","hasMongolian","countryCodeExists","code","undefined","isEnglish","getCCFromLang","getCCBasic","a","countryName","toLowerCase","includes","countryAbbrCount","SearchPageSVG","searchSVG","hideSvg","style","clipPath","transform","Map","handleRegionTip","e","el","countryCode","html","mapData","zoomOnScroll","containerStyle","onRegionTipShow","containerClassName","regionStyle","initial","hover","cursor","selected","selectedHover","regionsSelectable","series","regions","scale","horizontal","cssClass","normalizeFunction","Search","tweetInfo","loading","positiveTweetsInfo","negativeTweetsInfo","polarity","positive","negative","neutral","tweetFetchCount","searchKey","tweetCount","getResult","showPositiveNegativeTweets","top5PositiveTweets","MinPriorityQueue","top5NegativeTweets","countryCodeCount","currentDate","Date","currentDateString","getDate","getMonth","getFullYear","handleSearch","showResult","hideResult","getResponse","getChartData","manageHeaps","currentWeek","getCountryCode","length","API","process","REACT_APP_WEATHER_API_KEY","fetch","response","json","message","i","curr","first","day","setDate","toISOString","push","clear","totalTweets","trim","isNaN","alert","parseInt","header","body","search_key","tweet_count","clientSocket","sendRequest","tweet","polarityScore","setSearchCallback","enqueue","size","dequeue","sum","parseFloat","toFixed","color","ChartPie","href","download","ChartLine","toArray","obj","element","Card","item","bgImg","src","alt","Imgurl","Name","Role","About","Giturl","rel","LinkedInurl","Team","profile","imgAli","imgNikunj","imgVaspar","imgRishabh","imgVidit","Profileurl","App","Socket","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9abe2163.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({text, onClick}) => {\r\n    return (\r\n        <button className=\"btn\" onClick={onClick}><span className=\"btn-text\">{text}</span></button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { clicked: false }\r\n    \r\n    this[\"navLinks\"] = React.createRef();\r\n    this.refers = {};\r\n\r\n    this.openMenu = this.openMenu.bind(this);\r\n\r\n    this.props.menus.forEach((menu) => {\r\n      this[\"refers\"][menu.text] = React.createRef();\r\n    });\r\n  }\r\n\r\n  openMenu(event) {\r\n    this.setState({ clicked: !this.state.clicked})\r\n    event.stopPropagation();\r\n    this[\"navLinks\"].current.classList.toggle(\"nav-links-active\");\r\n    for (const ref in this.refers) {\r\n      if (this.refers.hasOwnProperty(ref)) {\r\n        const element = this[\"refers\"][ref];\r\n        element.current.classList.toggle(\"li-fade\");\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let activeElement;\r\n    const liElements = this.props.menus.map((menu, index) => {\r\n        if (window.location.pathname.slice(1) === menu.link || (window.location.pathname === '/' && index === 0)) {\r\n        activeElement = menu.text;\r\n        return (\r\n          <li\r\n            className={\"active\"}\r\n            ref={this[\"refers\"][menu.text]}\r\n            id={menu.text}\r\n            key={menu.text}\r\n            // onClick={this.handleOnClickLi}\r\n          >\r\n            <Link to={menu.link} className=\"list-style\">\r\n              {/* <img className={\"menu-img\"} src={menu.img} alt={menu.alt}></img> */}\r\n              <span className={\"menu-text\"}>{menu.text}</span>\r\n            </Link>\r\n          </li>\r\n        );\r\n      } else {\r\n        return (\r\n          <li\r\n            ref={this[\"refers\"][menu.text]}\r\n            id={menu.text}\r\n            key={menu.text}\r\n            // onClick={this.handleOnClickLi}\r\n          >\r\n            <Link to={menu.link} className=\"list-style\">\r\n              {/* <img className={\"menu-img\"} src={menu.img} alt={menu.alt}></img> */}\r\n              <span className={\"menu-text\"}>{menu.text}</span>\r\n            </Link>\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n    this.activeMenu = this.refers[activeElement];\r\n\r\n    return (\r\n      <>\r\n        <header>\r\n          <svg\r\n            className=\"bg-svg\"\r\n            viewBox=\"0 0 1920 200\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M1931 98.3043C1054.5 250.5 909.714 12.3115 664 115.5C375.982 236.454 16.0398 197.67 -9.75102 100.709C-35.5418 3.7478 42.8948 -118.036 187.5 -156.5C332.105 -194.964 2098.12 -259.11 1931 98.3043Z\"\r\n              fill=\"#c2f0ea\"\r\n              fillOpacity=\"1\"\r\n            />\r\n          </svg>\r\n          <nav className={\"nav-logo\"}>\r\n            <i className={\"img\"}></i>\r\n            <h3 className=\"logo-name\">Feedback Analysis</h3>\r\n          </nav>\r\n          <div id=\"menu-bar\" onClick={this.openMenu}>\r\n            {/* <div className=\"stick s1\"></div>\r\n            <div className=\"stick s2\"></div>\r\n            <div className=\"stick s3\"></div> */}\r\n            <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n          </div>\r\n          <ul className={\"nav-links\"} ref={this[\"navLinks\"]}>\r\n            {liElements}\r\n          </ul>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Button from '../../components/Button/Button';\r\nimport Header from '../../components/Header/Header';\r\nimport './Home.css'\r\n// import homesvg from '../../assets/images/Homesvg.svg'\r\n\r\nconst menus = [{text: 'Home', link: 'home'}, {text: 'Search', link: 'search'}, {text: 'Team', link: 'team'}];\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <Header menus={menus} />\r\n            <section>\r\n                <div className=\"row\">\r\n                    <div className=\"column left\">\r\n                        <div className=\"title\">\r\n                            <span className=\"line-1\">Twitter <span className=\"bold\">Feedback</span></span>\r\n                            <span className=\"line-2\">Segregation System</span>\r\n                        </div>\r\n                        <br></br>\r\n                        <div className=\"description\">\r\n                            <span className=\"line-1\">Get Real-time Customer</span>\r\n                            <span className=\"line-2\">Experience Feedback</span>\r\n                        </div>\r\n                        <br></br>\r\n                        <NavLink to=\"/search\">\r\n                        <Button text=\"Get Started\" />\r\n                        </NavLink>\r\n                        {/* <svg className=\"homeLeftsvg\" width=\"640\" height=\"230\" viewBox=\"0 0 640 230\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M491.721 408.792C446.421 456.033 302.222 444.088 164.809 420.12C27.3954 396.152 -76.0884 331.363 -66.3289 275.411C-56.5694 219.459 461.5 66.9999 583.771 105.925C683.5 163.5 591.313 304.933 491.721 408.792Z\" fill=\"#4DD2C1\" fill-opacity=\"0.4\"/>\r\n                        </svg> */}\r\n\r\n                    </div>\r\n                    <div className=\"column right\">\r\n                        {/* <img className=\"homeSVG\" src={homesvg}></img> */}\r\n                        <svg className=\"homeSVG\" width=\"911\" height=\"691\" viewBox=\"0 0 911 691\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g id=\"homeSVG\">\r\n                            <g id=\"tweet3\">\r\n                            <path id=\"Vector\" d=\"M306 111.865H228.75V205.071H306V111.865Z\" fill=\"#F2F2F2\"/>\r\n                            <path id=\"Vector_2\" d=\"M279.736 344.374L278.662 343.289C283.599 337.492 287.341 330.712 289.659 323.365C293.308 311.992 295.091 294.029 282.858 273.047C270.342 251.579 269.779 234.142 271.51 223.294C273.394 211.491 278.201 204.875 278.404 204.599L279.596 205.542C279.548 205.607 274.783 212.188 272.975 223.639C271.306 234.211 271.889 251.226 284.142 272.244C296.688 293.763 294.829 312.224 291.061 323.921C286.978 336.595 280.03 344.062 279.736 344.374Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_3\" d=\"M336 205.848H228V94H336V205.848ZM229.5 204.294H334.5V95.5534H229.5V204.294Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_4\" d=\"M316.5 126.622H250.5V128.176H316.5V126.622Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_5\" d=\"M316.5 143.71H250.5V145.264H316.5V143.71Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_6\" d=\"M316.5 160.798H250.5V162.351H316.5V160.798Z\" fill=\"#3F3D56\"/>\r\n                            </g>\r\n                            <g id=\"Tweets\">\r\n                            <g id=\"tweet4\">\r\n                            <path id=\"Vector_7\" d=\"M635.889 107.078H555.778V206.612H635.889V107.078Z\" fill=\"#F2F2F2\"/>\r\n                            <path id=\"Vector_8\" d=\"M608.3 334L607.183 333.006C612.317 327.698 616.208 321.489 618.618 314.761C622.413 304.346 624.267 287.897 611.546 268.682C598.531 249.022 597.946 233.054 599.746 223.12C601.705 212.311 606.703 206.252 606.915 206L608.154 206.864C608.105 206.923 603.15 212.95 601.27 223.436C599.534 233.118 600.14 248.699 612.881 267.946C625.927 287.652 623.994 304.558 620.076 315.27C615.831 326.877 608.605 333.715 608.3 334Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_9\" d=\"M667 207.442H555V88H667V207.442ZM556.556 205.783H665.444V89.6589H556.556V205.783Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_10\" d=\"M646.778 122.837H578.333V124.496H646.778V122.837Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_11\" d=\"M646.778 141.085H578.333V142.744H646.778V141.085Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_12\" d=\"M646.778 159.333H578.333V160.992H646.778V159.333Z\" fill=\"#3F3D56\"/>\r\n                            </g>\r\n                            <g id=\"tweet2\">\r\n                            <path id=\"Vector_13\" d=\"M219.333 174.436H150.667V265.409H219.333V174.436Z\" fill=\"#F2F2F2\"/>\r\n                            <path id=\"Vector_14\" d=\"M196.137 361L195.16 360.255C199.652 356.273 203.057 351.617 205.166 346.571C208.486 338.759 210.108 326.422 198.978 312.011C187.59 297.267 187.078 285.29 188.653 277.84C190.367 269.733 194.74 265.189 194.926 265L196.01 265.648C195.966 265.692 191.631 270.212 189.986 278.077C188.467 285.338 188.997 297.024 200.146 311.46C211.561 326.239 209.87 338.919 206.442 346.953C202.727 355.658 196.405 360.786 196.137 361Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_15\" d=\"M246 266.167H150V157H246V266.167ZM151.333 264.651H244.667V158.516H151.333V264.651Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_16\" d=\"M228.667 188.84H170V190.357H228.667V188.84Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_17\" d=\"M228.667 205.519H170V207.035H228.667V205.519Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_18\" d=\"M228.667 222.197H170V223.713H228.667V222.197Z\" fill=\"#3F3D56\"/>\r\n                            </g>\r\n                            <g id=\"tweet5\">\r\n                            <path id=\"Vector_19\" d=\"M745.333 186.436H676.667V277.409H745.333V186.436Z\" fill=\"#F2F2F2\"/>\r\n                            <path id=\"Vector_20\" d=\"M722.137 363L721.16 362.332C725.652 358.766 729.057 354.594 731.166 350.074C734.486 343.076 736.108 332.024 724.978 319.114C713.59 305.905 713.078 295.177 714.653 288.503C716.367 281.24 720.74 277.17 720.926 277L722.01 277.58C721.966 277.62 717.631 281.669 715.986 288.715C714.467 295.22 714.997 305.688 726.146 318.62C737.561 331.86 735.87 343.219 732.442 350.416C728.727 358.214 722.405 362.808 722.137 363Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_21\" d=\"M772 278.167H676V169H772V278.167ZM677.333 276.651H770.667V170.516H677.333V276.651Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_22\" d=\"M754.667 200.84H696V202.357H754.667V200.84Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_23\" d=\"M754.667 217.519H696V219.035H754.667V217.519Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_24\" d=\"M754.667 234.197H696V235.713H754.667V234.197Z\" fill=\"#3F3D56\"/>\r\n                            </g>\r\n                            <g id=\"tweet1\">\r\n                            <path id=\"Vector_25\" d=\"M95.2778 139.765H5.86807V237.672H95.2778V139.765Z\" fill=\"#F2F2F2\"/>\r\n                            <path id=\"Vector_26\" d=\"M65.0745 355L63.8653 354.084C69.4265 349.19 73.6419 343.467 76.2531 337.264C80.3641 327.663 82.3723 312.498 68.5918 294.785C54.4924 276.661 53.8579 261.94 55.808 252.783C57.9305 242.818 63.3451 237.233 63.5745 237L64.9173 237.796C64.8632 237.851 59.4957 243.407 57.459 253.074C55.5787 261.999 56.2346 276.363 70.0382 294.107C84.171 312.273 82.0773 327.858 77.8327 337.734C73.2333 348.433 65.4057 354.737 65.0745 355Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_27\" d=\"M130 238.488H5V121H130V238.488ZM6.73611 236.856H128.264V122.632H6.73611V236.856Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_28\" d=\"M107.431 155.267H31.0417V156.899H107.431V155.267Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_29\" d=\"M107.431 173.217H31.0417V174.849H107.431V173.217Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_30\" d=\"M107.431 191.167H31.0417V192.798H107.431V191.167Z\" fill=\"#3F3D56\"/>\r\n                            </g>\r\n                            <g id=\"tweet6\">\r\n                            <path id=\"Vector_31\" d=\"M817.405 99.2905H727.869V205.154H817.405V99.2905Z\" fill=\"#F2F2F2\"/>\r\n                            <path id=\"Vector_32\" d=\"M787.074 345L785.865 343.913C791.427 338.107 795.642 331.316 798.253 323.958C802.364 312.566 804.372 294.574 790.592 273.558C776.492 252.055 775.858 234.59 777.808 223.725C779.931 211.903 785.345 205.276 785.575 205L786.917 205.945C786.863 206.01 781.496 212.601 779.459 224.071C777.579 234.66 778.235 251.702 792.038 272.754C806.171 294.307 804.077 312.798 799.833 324.514C795.233 337.209 787.406 344.688 787.074 345Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_33\" d=\"M852.176 206.036H727V79H852.176V206.036ZM728.739 204.272H850.437V80.7644H728.739V204.272Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_34\" d=\"M829.574 116.052H753.078V117.817H829.574V116.052Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_35\" d=\"M829.574 135.46H753.078V137.225H829.574V135.46Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_36\" d=\"M829.574 154.869H753.078V156.633H829.574V154.869Z\" fill=\"#3F3D56\"/>\r\n                            </g>\r\n                            </g>\r\n                            <g id=\"Vector_37\">\r\n                            <path id=\"Vector_38\" d=\"M848.412 283.914H0V691H848.412V283.914Z\" fill=\"#00BFA6\" fillOpacity=\"0.7\"/>\r\n                            </g>\r\n                            <path id=\"Vector_39\" d=\"M150.498 461C152.754 461 154.582 459.151 154.582 456.87C154.582 454.589 152.754 452.74 150.498 452.74C148.243 452.74 146.414 454.589 146.414 456.87C146.414 459.151 148.243 461 150.498 461Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_40\" d=\"M164.501 461C166.756 461 168.585 459.151 168.585 456.87C168.585 454.589 166.756 452.74 164.501 452.74C162.245 452.74 160.417 454.589 160.417 456.87C160.417 459.151 162.245 461 164.501 461Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_41\" d=\"M178.503 461C180.758 461 182.587 459.151 182.587 456.87C182.587 454.589 180.758 452.74 178.503 452.74C176.247 452.74 174.419 454.589 174.419 456.87C174.419 459.151 176.247 461 178.503 461Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_42\" opacity=\"0.1\" d=\"M224.145 283.914L0 439.529V359.807L109.313 283.914H224.145Z\" fill=\"black\"/>\r\n                            <path id=\"Vector_43\" d=\"M129.593 399.975L114.238 383.327L130.7 367.799L146.055 384.447L129.593 399.975ZM116.685 383.413L129.678 397.5L143.607 384.361L130.615 370.274L116.685 383.413Z\" fill=\"#F0F0F0\"/>\r\n                            <path id=\"Vector_44\" d=\"M636.309 389.504H613.798V366.738H636.309V389.504ZM615.529 387.753H634.577V368.489H615.529V387.753Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_45\" d=\"M775.784 583.791C782.132 583.791 787.277 578.587 787.277 572.168C787.277 565.749 782.132 560.545 775.784 560.545C769.437 560.545 764.291 565.749 764.291 572.168C764.291 578.587 769.437 583.791 775.784 583.791Z\" fill=\"#F0F0F0\"/>\r\n                            <path id=\"Vector_46\" d=\"M333.493 552.246C339.84 552.246 344.986 547.042 344.986 540.623C344.986 534.204 339.84 529 333.493 529C327.146 529 322 534.204 322 540.623C322 547.042 327.146 552.246 333.493 552.246Z\" fill=\"black\"/>\r\n                            <path id=\"Vector_47\" d=\"M775.784 605.745C769.217 605.745 762.798 603.776 757.338 600.086C751.878 596.397 747.622 591.153 745.109 585.018C742.596 578.882 741.939 572.131 743.22 565.618C744.501 559.104 747.663 553.121 752.307 548.426C756.95 543.73 762.866 540.532 769.307 539.236C775.747 537.941 782.423 538.606 788.49 541.147C794.557 543.688 799.742 547.992 803.391 553.514C807.039 559.035 808.986 565.527 808.986 572.168C808.976 581.07 805.475 589.605 799.251 595.9C793.026 602.194 784.587 605.735 775.784 605.745ZM775.784 541.174C769.723 541.174 763.797 542.992 758.757 546.397C753.717 549.803 749.789 554.644 747.469 560.307C745.149 565.971 744.542 572.203 745.725 578.215C746.907 584.227 749.826 589.75 754.113 594.084C758.399 598.419 763.86 601.371 769.805 602.567C775.75 603.763 781.912 603.149 787.513 600.803C793.113 598.457 797.899 594.485 801.267 589.388C804.635 584.291 806.432 578.298 806.432 572.168C806.423 563.951 803.191 556.073 797.445 550.262C791.7 544.452 783.91 541.183 775.784 541.174Z\" fill=\"#2F2E41\"/>\r\n                            <path id=\"Vector_48\" d=\"M408.091 321.888L414.136 334.277L427.655 336.263L417.873 345.906L420.182 359.523L408.091 353.094L395.998 359.523L398.308 345.906L388.526 336.263L402.045 334.277L408.091 321.888Z\" fill=\"#F0F0F0\"/>\r\n                            <path id=\"Vector_49\" d=\"M429.946 42.5576H429.946C450.836 42.5576 467.771 61.564 467.771 85.0096V114.798H458.712L453.467 103.761L454.779 114.798H396.55L391.783 104.764L392.974 114.798H386.419V91.4087C386.419 64.429 405.906 42.5576 429.946 42.5576Z\" fill=\"#2F2E41\"/>\r\n                            <path id=\"Vector_50\" d=\"M473.287 237.176L496.511 247.158L577.217 313.508C580.184 317.196 582.003 321.692 582.442 326.426C583.023 334.059 607.408 373.986 598.699 379.271C589.99 384.555 558.637 400.409 556.895 389.84C555.153 379.271 545.864 334.059 545.864 334.059L468.062 263.598L473.287 237.176Z\" fill=\"#2F2E41\"/>\r\n                            <path id=\"Vector_51\" d=\"M412.903 229.543C412.903 229.543 407.678 281.214 422.774 290.608C437.87 300.003 504.64 329.949 504.64 329.949C504.64 329.949 476.19 356.959 481.996 363.417C487.802 369.876 513.93 387.491 517.414 383.968C520.897 380.445 559.798 338.169 555.153 324.664C550.509 311.159 486.061 267.122 486.061 267.122L478.513 239.525L476.19 217.212L451.804 201.359L412.903 229.543Z\" fill=\"#2F2E41\"/>\r\n                            <path id=\"Vector_52\" d=\"M439.504 109.24C452.872 109.24 463.709 98.2804 463.709 84.7615C463.709 71.2426 452.872 60.2833 439.504 60.2833C426.136 60.2833 415.299 71.2426 415.299 84.7615C415.299 98.2804 426.136 109.24 439.504 109.24Z\" fill=\"#FFB9B9\"/>\r\n                            <path id=\"Vector_53\" d=\"M420.742 94.7871C420.742 94.7871 421.903 117.1 403.904 124.146C385.905 131.192 448.611 176.991 448.611 176.991V125.907C448.611 125.907 440.482 117.1 448.611 103.595L420.742 94.7871Z\" fill=\"#FFB9B9\"/>\r\n                            <path id=\"Vector_54\" d=\"M382.131 199.597L386.776 222.497L400.71 301.177C400.71 301.177 389.098 334.646 404.775 334.059C420.451 333.472 412.903 297.654 412.903 297.654L404.775 232.478V207.23L382.131 199.597Z\" fill=\"#FFB9B9\"/>\r\n                            <path id=\"Vector_55\" d=\"M481.996 188.441L487.222 208.992L511.027 267.121C511.027 267.121 527.284 294.718 513.93 294.131C500.576 293.544 500.576 267.121 500.576 267.121L473.287 220.148V193.725L481.996 188.441Z\" fill=\"#FFB9B9\"/>\r\n                            <path id=\"Vector_56\" d=\"M486.061 359.894L466.9 378.097C466.9 378.097 453.546 375.161 448.321 391.014C443.095 406.868 439.612 416.85 439.612 416.85L446.579 420.96L455.288 408.63C455.288 408.63 460.514 430.942 465.739 432.703C470.965 434.465 497.092 446.208 494.77 432.703L481.996 413.914C481.996 413.914 480.254 392.776 485.48 391.014C490.705 389.253 504.64 371.638 504.64 371.638L486.061 359.894Z\" fill=\"#2F2E41\"/>\r\n                            <path id=\"Vector_57\" d=\"M411.983 247.745C411.983 247.745 466.56 227.781 470.044 229.543C472.637 230.701 475.399 231.426 478.222 231.689L478.173 223.671C478.173 223.671 460.174 217.212 450.303 221.322C440.433 225.432 410.241 243.635 410.241 243.635L411.983 247.745Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_58\" d=\"M445.127 165.248C445.127 165.248 429.451 147.045 424.806 135.889C421.867 129.126 416.473 123.762 409.737 120.904C409.737 120.904 374.873 128.843 375.454 142.935C376.034 157.027 397.517 178.753 397.517 178.753C397.517 178.753 394.614 256.846 410.291 255.672C413.672 251.591 416.058 246.764 417.258 241.58C419 233.359 472.997 224.552 472.997 224.552C472.997 224.552 477.642 232.772 478.222 229.249C478.803 225.726 473.577 139.412 473.577 139.412L445.89 120.904L445.127 165.248Z\" fill=\"#D0CDE1\"/>\r\n                            <path id=\"Vector_59\" d=\"M379.926 137.263L379.538 137.483C378.297 138.188 377.264 139.213 376.545 140.455C375.826 141.697 375.447 143.11 375.447 144.549L375.453 188.125C375.449 189.309 375.19 190.478 374.694 191.551C374.198 192.625 373.477 193.576 372.581 194.339C370.345 196.263 368.271 199.035 372.551 200.478C379.518 202.826 406.807 214.57 407.388 210.46C407.968 206.349 409.129 201.652 407.388 201.652C406.024 201.652 397.899 159.547 391.371 141.545C390.972 140.443 390.341 139.441 389.522 138.61C388.703 137.779 387.715 137.137 386.627 136.73C385.538 136.323 384.376 136.159 383.219 136.251C382.062 136.343 380.938 136.689 379.926 137.263Z\" fill=\"#D0CDE1\"/>\r\n                            <path id=\"Vector_60\" d=\"M465.739 137.357L473.868 139.706L483.158 180.22C483.158 180.22 494.189 182.569 490.705 186.679C487.222 190.789 472.707 201.358 472.707 201.358L465.739 137.357Z\" fill=\"#D0CDE1\"/>\r\n                            <path id=\"Vector_61\" d=\"M419.193 54.2517C421.013 51.7799 423.372 49.7654 426.086 48.3645C428.801 46.9636 431.798 46.2141 434.845 46.174H435.588C449.906 46.174 461.513 59.2767 461.513 75.4398V75.4399H456.716L455.941 69.4756L454.805 75.4399H426.35L423.966 70.394L424.562 75.4399H418.964C416.352 88.5591 420.105 101.678 430.224 114.798H420.688L415.92 104.706L417.112 114.798H398.934L395.358 91.5865C395.358 74.2037 405.346 59.4634 419.193 54.2517Z\" fill=\"#2F2E41\"/>\r\n                            <g id=\"Group 11\">\r\n                            <path id=\"Vector_62\" d=\"M708.151 448.824H140.262V691H708.151V448.824Z\" fill=\"#F0F0F0\"/>\r\n                            <path id=\"Vector_63\" d=\"M708.151 463.601H140.262V465.908H708.151V463.601Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"star1\" d=\"M441.61 552.454L447.656 564.843L461.175 566.829L451.393 576.472L453.702 590.088L441.61 583.66L429.518 590.088L431.827 576.472L422.045 566.829L435.564 564.843L441.61 552.454Z\" fill=\"#00BFA6\"/>\r\n                            <path id=\"star2\" d=\"M490.505 554.185L496.551 566.575L510.07 568.56L500.287 578.204L502.597 591.82L490.505 585.392L478.414 591.82L480.723 578.204L470.941 568.56L484.46 566.575L490.505 554.185Z\" fill=\"#00BFA6\"/>\r\n                            <path id=\"star3\" d=\"M539.401 554.185L545.447 566.575L558.966 568.56L549.183 578.204L551.493 591.82L539.401 585.392L527.309 591.82L529.618 578.204L519.836 568.56L533.355 566.575L539.401 554.185Z\" fill=\"#00BFA6\"/>\r\n                            <path id=\"star4\" d=\"M588.296 554.185L594.342 566.575L607.861 568.56L598.078 578.204L600.388 591.82L588.296 585.392L576.205 591.82L578.514 578.204L568.732 568.56L582.251 566.575L588.296 554.185Z\" fill=\"#00BFA6\"/>\r\n                            <path id=\"star5\" d=\"M637.192 554.185L643.238 566.575L656.757 568.56L646.974 578.204L649.283 591.82L637.192 585.392L625.099 591.82L627.409 578.204L617.627 568.56L631.146 566.575L637.192 554.185Z\" fill=\"#00BFA6\"/>\r\n                            <g id=\"Group 10\">\r\n                            <path id=\"Vector_64\" opacity=\"0.1\" d=\"M479.068 283.914L0 616.514V536.78L364.236 283.914H479.068Z\" fill=\"black\"/>\r\n                            </g>\r\n                            <g id=\"Shape\">\r\n                            <path d=\"M321.779 579.398L304.838 577.216C298.234 569.95 288.504 567.564 279.799 571.077C269.741 575.306 263.25 586.311 263.712 598.347H211.559C209.703 598.365 207.975 599.409 206.942 601.138C205.808 602.983 205.562 605.338 206.283 607.428C209.824 617.62 220.2 640.445 242.757 643.357C236.777 651.272 229.449 657.767 221.201 662.462C218.969 663.755 217.753 666.534 218.209 669.306C218.573 672.06 220.503 674.222 222.959 674.628C229.25 675.706 235.603 676.258 241.967 676.279C256.378 676.279 273.342 673.214 286.31 661.732C297.725 651.63 304.373 636.473 306.084 616.43C308.885 612.899 310.842 608.629 311.774 604.019L324.916 590.695C326.629 588.975 327.268 586.279 326.545 583.832C325.882 581.424 324.012 579.684 321.779 579.398ZM321.465 586.412L307.703 600.368C307.289 600.788 307.008 601.348 306.902 601.964C306.19 606.184 304.402 610.082 301.755 613.186C301.348 613.677 301.099 614.307 301.048 614.976C299.645 633.708 293.613 647.915 283.124 657.203C265.138 673.125 238.191 671.373 223.731 668.919C223.477 668.874 223.288 668.631 223.283 668.342C223.211 668.036 223.335 667.714 223.584 667.565C242.206 656.655 249.535 642.8 249.834 642.217C250.293 641.325 250.293 640.226 249.835 639.333C249.376 638.441 248.529 637.89 247.61 637.888C224.843 637.888 214.474 615.117 211.067 605.326C210.969 605.012 211.011 604.664 211.18 604.391C211.254 604.233 211.391 604.126 211.548 604.103H266.53C267.293 604.103 268.017 603.723 268.506 603.066C268.995 602.408 269.199 601.542 269.062 600.7C268.931 599.901 268.863 599.09 268.859 598.278C268.423 588.722 273.519 579.937 281.484 576.512C288.606 573.625 296.576 575.755 301.773 581.932C302.19 582.425 302.747 582.738 303.348 582.815L321.19 585.125C321.413 585.155 321.595 585.34 321.643 585.586C321.742 585.876 321.672 586.205 321.465 586.412Z\" fill=\"#3F3D56\"/>\r\n                            <path d=\"M321.779 579.398L304.838 577.216C298.234 569.95 288.504 567.564 279.799 571.077C269.741 575.306 263.25 586.311 263.712 598.347H211.559C209.703 598.365 207.975 599.409 206.942 601.138C205.808 602.983 205.562 605.338 206.283 607.428C209.824 617.62 220.2 640.445 242.757 643.357C236.777 651.272 229.449 657.767 221.201 662.462C218.969 663.755 217.753 666.534 218.209 669.306C218.573 672.06 220.503 674.222 222.959 674.628C229.25 675.706 235.603 676.258 241.967 676.279C256.378 676.279 273.342 673.214 286.31 661.732C297.725 651.63 304.373 636.473 306.084 616.43C308.885 612.899 310.842 608.629 311.774 604.019L324.916 590.695C326.629 588.975 327.268 586.279 326.545 583.832C325.882 581.424 324.012 579.684 321.779 579.398ZM321.465 586.412L307.703 600.368C307.289 600.788 307.008 601.348 306.902 601.964C306.19 606.184 304.402 610.082 301.755 613.186C301.348 613.677 301.099 614.307 301.048 614.976C299.645 633.708 293.613 647.915 283.124 657.203C265.138 673.125 238.191 671.373 223.731 668.919C223.477 668.874 223.288 668.631 223.283 668.342C223.211 668.036 223.335 667.714 223.584 667.565C242.206 656.655 249.535 642.8 249.834 642.217C250.293 641.325 250.293 640.226 249.835 639.333C249.376 638.441 248.529 637.89 247.61 637.888C224.843 637.888 214.474 615.117 211.067 605.326C210.969 605.012 211.011 604.664 211.18 604.391C211.254 604.233 211.391 604.126 211.548 604.103H266.53C267.293 604.103 268.017 603.723 268.506 603.066C268.995 602.408 269.199 601.542 269.062 600.7C268.931 599.901 268.863 599.09 268.859 598.278C268.423 588.722 273.519 579.937 281.484 576.512C288.606 573.625 296.576 575.755 301.773 581.932C302.19 582.425 302.747 582.738 303.348 582.815L321.19 585.125C321.413 585.155 321.595 585.34 321.643 585.586C321.742 585.876 321.672 586.205 321.465 586.412Z\" stroke=\"black\"/>\r\n                            </g>\r\n                            <g id=\"Shape_2\">\r\n                            <path d=\"M349.99 503.097H216.17C210.485 503.097 205.877 508.266 205.877 514.642V552.165C205.877 558.541 210.485 563.711 216.17 563.711H326.291L333.594 582.129C334.213 583.693 335.596 584.702 337.122 584.702C338.649 584.702 340.031 583.693 340.651 582.129L347.954 563.711H349.99C355.675 563.711 360.283 558.541 360.283 552.165V514.642C360.283 508.266 355.675 503.097 349.99 503.097ZM355.137 552.165C355.137 555.353 352.832 557.938 349.99 557.938H346.284C345.267 557.937 344.346 558.608 343.932 559.649L337.122 576.818L330.313 559.649C329.899 558.608 328.978 557.937 327.961 557.938H216.17C213.328 557.938 211.024 555.353 211.024 552.165V514.642C211.024 511.454 213.328 508.869 216.17 508.869H349.99C352.832 508.869 355.137 511.454 355.137 514.642V552.165Z\" fill=\"#3F3D56\"/>\r\n                            <path d=\"M349.99 503.097H216.17C210.485 503.097 205.877 508.266 205.877 514.642V552.165C205.877 558.541 210.485 563.711 216.17 563.711H326.291L333.594 582.129C334.213 583.693 335.596 584.702 337.122 584.702C338.649 584.702 340.031 583.693 340.651 582.129L347.954 563.711H349.99C355.675 563.711 360.283 558.541 360.283 552.165V514.642C360.283 508.266 355.675 503.097 349.99 503.097ZM355.137 552.165C355.137 555.353 352.832 557.938 349.99 557.938H346.284C345.267 557.937 344.346 558.608 343.932 559.649L337.122 576.818L330.313 559.649C329.899 558.608 328.978 557.937 327.961 557.938H216.17C213.328 557.938 211.024 555.353 211.024 552.165V514.642C211.024 511.454 213.328 508.869 216.17 508.869H349.99C352.832 508.869 355.137 511.454 355.137 514.642V552.165Z\" stroke=\"black\"/>\r\n                            </g>\r\n                            <g id=\"Shape_3\">\r\n                            <path d=\"M272.786 607.006C271.365 607.006 270.213 608.299 270.213 609.893C270.213 610.077 270.03 628.591 258.594 636.286C257.788 636.807 257.295 637.776 257.306 638.819C257.317 639.863 257.829 640.819 258.645 641.319C259.462 641.82 260.456 641.787 261.244 641.233C275.2 631.829 275.36 610.785 275.36 609.893C275.36 608.299 274.208 607.006 272.786 607.006Z\" fill=\"#3F3D56\"/>\r\n                            <path d=\"M272.786 607.006C271.365 607.006 270.213 608.299 270.213 609.893C270.213 610.077 270.03 628.591 258.594 636.286C257.788 636.807 257.295 637.776 257.306 638.819C257.317 639.863 257.829 640.819 258.645 641.319C259.462 641.82 260.456 641.787 261.244 641.233C275.2 631.829 275.36 610.785 275.36 609.893C275.36 608.299 274.208 607.006 272.786 607.006Z\" stroke=\"black\"/>\r\n                            </g>\r\n                            <g id=\"Shape_4\">\r\n                            <path d=\"M223.891 523.301H234.185C235.606 523.301 236.758 522.009 236.758 520.415C236.758 518.821 235.606 517.528 234.185 517.528H223.891C222.469 517.528 221.317 518.821 221.317 520.415C221.317 522.009 222.469 523.301 223.891 523.301Z\" fill=\"#3F3D56\"/>\r\n                            <path d=\"M223.891 523.301H234.185C235.606 523.301 236.758 522.009 236.758 520.415C236.758 518.821 235.606 517.528 234.185 517.528H223.891C222.469 517.528 221.317 518.821 221.317 520.415C221.317 522.009 222.469 523.301 223.891 523.301Z\" stroke=\"black\"/>\r\n                            </g>\r\n                            <g id=\"Shape_5\">\r\n                            <path d=\"M244.478 523.301H277.933C279.354 523.301 280.507 522.009 280.507 520.415C280.507 518.821 279.354 517.528 277.933 517.528H244.478C243.057 517.528 241.905 518.821 241.905 520.415C241.905 522.009 243.057 523.301 244.478 523.301Z\" fill=\"#3F3D56\"/>\r\n                            <path d=\"M244.478 523.301H277.933C279.354 523.301 280.507 522.009 280.507 520.415C280.507 518.821 279.354 517.528 277.933 517.528H244.478C243.057 517.528 241.905 518.821 241.905 520.415C241.905 522.009 243.057 523.301 244.478 523.301Z\" stroke=\"black\"/>\r\n                            </g>\r\n                            <g id=\"Shape_6\">\r\n                            <path d=\"M319.108 517.528H288.227C286.806 517.528 285.654 518.821 285.654 520.415C285.654 522.009 286.806 523.301 288.227 523.301H319.108C320.53 523.301 321.682 522.009 321.682 520.415C321.682 518.821 320.53 517.528 319.108 517.528Z\" fill=\"#3F3D56\"/>\r\n                            <path d=\"M319.108 517.528H288.227C286.806 517.528 285.654 518.821 285.654 520.415C285.654 522.009 286.806 523.301 288.227 523.301H319.108C320.53 523.301 321.682 522.009 321.682 520.415C321.682 518.821 320.53 517.528 319.108 517.528Z\" stroke=\"black\"/>\r\n                            </g>\r\n                            <g id=\"Shape_7\">\r\n                            <path d=\"M252.199 531.96H223.891C222.469 531.96 221.317 533.253 221.317 534.847C221.317 536.441 222.469 537.733 223.891 537.733H252.199C253.62 537.733 254.772 536.441 254.772 534.847C254.772 533.253 253.62 531.96 252.199 531.96Z\" fill=\"#3F3D56\"/>\r\n                            <path d=\"M252.199 531.96H223.891C222.469 531.96 221.317 533.253 221.317 534.847C221.317 536.441 222.469 537.733 223.891 537.733H252.199C253.62 537.733 254.772 536.441 254.772 534.847C254.772 533.253 253.62 531.96 252.199 531.96Z\" stroke=\"black\"/>\r\n                            </g>\r\n                            <g id=\"Shape_8\">\r\n                            <path d=\"M301.094 531.96H265.066C263.645 531.96 262.492 533.253 262.492 534.847C262.492 536.441 263.645 537.733 265.066 537.733H301.094C302.515 537.733 303.668 536.441 303.668 534.847C303.668 533.253 302.515 531.96 301.094 531.96Z\" fill=\"#3F3D56\"/>\r\n                            <path d=\"M301.094 531.96H265.066C263.645 531.96 262.492 533.253 262.492 534.847C262.492 536.441 263.645 537.733 265.066 537.733H301.094C302.515 537.733 303.668 536.441 303.668 534.847C303.668 533.253 302.515 531.96 301.094 531.96Z\" stroke=\"black\"/>\r\n                            </g>\r\n                            </g>\r\n                            <path id=\"Vector_65\" d=\"M333.493 552.246C339.84 552.246 344.986 547.042 344.986 540.623C344.986 534.204 339.84 529 333.493 529C327.146 529 322 534.204 322 540.623C322 547.042 327.146 552.246 333.493 552.246Z\" fill=\"#00BFA6\"/>\r\n                            <path id=\"Vector_66\" d=\"M333.493 552.246C339.84 552.246 344.986 547.042 344.986 540.623C344.986 534.204 339.84 529 333.493 529C327.146 529 322 534.204 322 540.623C322 547.042 327.146 552.246 333.493 552.246Z\" fill=\"#00BFA6\"/>\r\n                            <path id=\"Vector_67\" d=\"M333 549C337.418 549 341 545.418 341 541C341 536.582 337.418 533 333 533C328.582 533 325 536.582 325 541C325 545.418 328.582 549 333 549Z\" fill=\"#F0F0F0\"/>\r\n                            <path id=\"Vector_68\" d=\"M154.761 461.539C157.39 461.539 159.522 459.404 159.522 456.77C159.522 454.135 157.39 452 154.761 452C152.132 452 150 454.135 150 456.77C150 459.404 152.132 461.539 154.761 461.539Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_69\" d=\"M171.084 461.539C173.714 461.539 175.845 459.404 175.845 456.77C175.845 454.135 173.714 452 171.084 452C168.455 452 166.323 454.135 166.323 456.77C166.323 459.404 168.455 461.539 171.084 461.539Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_70\" d=\"M187.407 461.539C190.037 461.539 192.168 459.404 192.168 456.77C192.168 454.135 190.037 452 187.407 452C184.778 452 182.646 454.135 182.646 456.77C182.646 459.404 184.778 461.539 187.407 461.539Z\" fill=\"#3F3D56\"/>\r\n                            <path id=\"Vector_71\" d=\"M564.443 381.033L574.314 410.391C574.314 410.391 563.863 421.547 569.088 430.942V463.236H577.217L579.539 446.208C579.539 446.208 588.798 463.021 593.474 463.236C603.277 463.687 622.689 467.214 623.27 461.929C623.851 456.645 608.57 451.493 608.57 451.493L592.313 406.281L585.345 378.684L564.443 381.033Z\" fill=\"#2F2E41\"/>\r\n                            </g>\r\n                        </svg>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport './Input.css';\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: \"\",\r\n    }\r\n\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n  }\r\n\r\n  handleOnChange(event) {\r\n    event.stopPropagation();\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  get value() {\r\n    return this.state.value;\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <div className=\"textInput\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder={this.props.placeholder}\r\n        value={this.state.value}\r\n        onChange={this.handleOnChange}\r\n      ></input>\r\n      <div className=\"icon-wrapper\">\r\n        <i className={`icon ${this.props.icon}`}></i>\r\n        </div>\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport TweetEmbed from 'react-tweet-embed'\r\nimport \"./Tweet.css\";\r\n\r\nconst Tweet = ({ url }) => {\r\n  return (\r\n    // <blockquote className=\"twitter-tweet\" data-lang=\"en\">\r\n    //   <a href={url}>exe</a>\r\n    // </blockquote>\r\n    <TweetEmbed className=\"twitter-tweet\" id={url.split(\"/\")[5]} />\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React, {Component} from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\nclass Chart extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      chartData:props.chartData\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle:true,\r\n    displayLegend: true,\r\n    legendPosition:'top',\r\n    location:'Tweet'\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"chart\">\r\n        <Pie\r\n          data={this.state.chartData}\r\n          options={{\r\n            title:{\r\n              display:this.props.displayTitle,\r\n              // text:'Analysis Report '+this.props.location,\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:this.props.displayLegend,\r\n              position:this.props.legendPosition\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart;","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n// function nextweek(){\r\n\r\n//     for (let i = 6; i >= 0; i--) {\r\n//       let curr = new Date\r\n//       let first = curr.getDate() - i\r\n//       let day = new Date(curr.setDate(first)).toISOString().slice(0, 10)\r\n//       this.week.push(day)\r\n//     }\r\n//     console.log(week);\r\n// }\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log('Called Line Chart');\r\n    console.log(this.props.chartLineData);\r\n    console.log(this.props.chartLineLabel);\r\n    this.state = {\r\n      data: {\r\n        labels: this.props.chartLineLabel,\r\n        datasets: [\r\n          {\r\n            label: \"Tweets\",\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: \"rgba(75,192,192,1)\",\r\n            borderColor: \"rgba(0,0,0,1)\",\r\n            borderWidth: 2,\r\n            data: this.props.chartLineData,\r\n          },\r\n        ],\r\n        options: {\r\n          scales: {\r\n            x: {\r\n              type: \"time\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Line\r\n          data={this.state.data}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: \"Tweets per day\",\r\n              fontSize: 20,\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: \"bottom\",\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n    <svg width=\"811\" height=\"550\" className=\"loadingSvg\" viewBox=\"0 0 3306 3314\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g id=\"loadingAnimationSvg\">\r\n      <g id=\"Group 12\">\r\n        <path id=\"Vector\" d=\"M2068.41 1242.82L1514.27 547.785C1489.11 570.881 1458.11 586.593 1424.65 593.204C1320.33 613.826 1218.44 542.321 1197.09 433.494C1189.73 397.503 1192.3 360.178 1204.53 325.547C1216.76 290.917 1238.18 260.295 1266.47 236.988L1077.53 0L1.06787 923.402L991.958 2166.23L2068.41 1242.82Z\" fill=\"#BAB8C0\"/>\r\n        <path id=\"Vector_2\" d=\"M1379.87 560.182C1466.15 560.182 1536.09 489.98 1536.09 403.381C1536.09 316.782 1466.15 246.58 1379.87 246.58C1293.59 246.58 1223.64 316.782 1223.64 403.381C1223.64 489.98 1293.59 560.182 1379.87 560.182Z\" fill=\"#F2F2F2\"/>\r\n        <path id=\"Vector_3\" d=\"M402.356 1102.06L354.557 1157.58L515.596 1297.25L563.395 1241.73L402.356 1102.06Z\" fill=\"#00BFA6\"/>\r\n        <path id=\"Vector_4\" d=\"M1437.57 2095.01L1389.77 2150.54L1532.52 2274.34L1580.32 2218.81L1437.57 2095.01Z\" fill=\"#00BFA6\"/>\r\n        <path id=\"Vector_5\" d=\"M1695.49 1681.46V1685.76C1695.39 1696.57 1695.08 1707.33 1694.57 1718.05C1685.27 1901.4 1606.47 2074.24 1474.3 2201.15C1342.13 2328.05 1166.61 2399.42 983.705 2400.62C800.8 2401.82 624.363 2332.77 490.552 2207.6C356.741 2082.44 275.691 1910.65 264.01 1727.44C263.035 1712.23 262.547 1696.9 262.547 1681.46C262.29 1532.51 308.345 1387.2 394.291 1265.78C401.163 1256 408.311 1246.39 415.736 1236.97C420.853 1230.41 426.117 1224.01 431.43 1217.65C552.377 1073.83 724.665 983.329 911.331 965.55C1098 947.771 1284.17 1004.13 1429.91 1122.55C1438.54 1129.54 1447.02 1136.78 1455.3 1144.17C1461.93 1150.09 1468.45 1156.14 1474.85 1162.32C1600.91 1283.35 1678.51 1446.5 1693.01 1620.99C1694.66 1640.95 1695.49 1661.1 1695.49 1681.46Z\" fill=\"#F2F2F2\"/>\r\n        <path id=\"Vector_6\" d=\"M979.021 2491.08C534.239 2491.08 172.381 2127.88 172.381 1681.46C172.118 1477.2 249.032 1280.45 387.611 1130.87L405.474 1147.51C271.083 1292.57 196.494 1483.38 196.751 1681.46C196.751 2114.4 547.676 2466.62 979.021 2466.62C1083.83 2466.98 1187.62 2446.02 1284.14 2405.02C1380.66 2364.02 1467.9 2303.82 1540.61 2228.05L1558.1 2245.08C1483.13 2323.21 1393.17 2385.28 1293.64 2427.56C1194.12 2469.84 1087.09 2491.45 979.021 2491.08Z\" fill=\"#00BFA6\"/>\r\n        <path id=\"Vector_7\" d=\"M1096 2473.96H891.289V2679.42H1096V2473.96Z\" fill=\"#00BFA6\"/>\r\n        <path id=\"Vector_8\" d=\"M415.736 1236.97C416.087 1237.12 416.416 1237.31 416.711 1237.56C420.561 1240.74 415.736 1246.85 416.321 1251.89C417.003 1258.35 425.581 1259.77 432.064 1260.4C438.546 1261.09 446.735 1266.32 443.664 1272.09C427.385 1277.72 410.911 1272.19 394.291 1265.78C308.345 1387.2 262.29 1532.51 262.547 1681.46C262.547 1696.91 263.035 1712.24 264.01 1727.44C265.373 1728.44 266.865 1729.24 268.445 1729.84C273.319 1731.7 278.973 1731.35 283.457 1734C287.015 1736.1 289.403 1739.82 292.961 1741.77C303.148 1747.35 317.282 1736.64 326.786 1743.29C329.243 1745.54 331.57 1747.92 333.756 1750.43C342.529 1758.06 356.956 1752.93 367.094 1758.65C373.625 1762.32 376.988 1769.66 380.498 1776.31C389.222 1792.94 403.357 1809.28 422.024 1810.6C427.911 1810.33 433.811 1810.53 439.667 1811.19C445.419 1812.51 451.073 1817.55 450.147 1823.37C448.538 1833.4 453.461 1844.36 452.145 1854.39C449.756 1872.73 423.876 1880.76 421.683 1899.1C421.675 1903.14 421.448 1907.17 421 1911.18C419.831 1915.98 416.224 1919.89 414.956 1924.69C412.52 1933.74 419.002 1942.79 426.069 1948.85C433.185 1954.97 441.666 1960.25 445.565 1968.76C449.659 1977.81 447.661 1988.33 448.977 1998.16C451.901 2019.64 470.373 2035.54 489.382 2045.81C495.473 2048.37 500.882 2052.32 505.174 2057.36C510.047 2064.45 509.56 2073.79 511.217 2082.26C515.214 2102.95 532.565 2120.02 533.053 2141.11C533.394 2156.13 525.108 2169.73 520.137 2183.86C515.023 2198.68 513.502 2214.51 515.701 2230.04C543.492 2253.7 573.032 2275.21 604.066 2294.37C605.754 2291.87 606.991 2289.09 607.721 2286.15C608.311 2282.91 607.904 2279.56 606.555 2276.56C605.206 2273.55 602.978 2271.03 600.167 2269.33C605.405 2267.34 610.17 2264.27 614.155 2260.32C616.113 2258.3 617.406 2255.73 617.859 2252.95C618.312 2250.16 617.904 2247.31 616.689 2244.77C625.268 2245.84 635.454 2246.38 641.108 2239.78C645.641 2234.49 645.348 2226.57 643.545 2219.87C641.07 2213.35 639.432 2206.55 638.671 2199.61C658.546 2200.59 678.466 2199.92 698.231 2197.61C695.371 2187.93 688.867 2179.76 680.1 2174.81C689.068 2173.3 697.207 2162.53 700.034 2153.87C702.479 2145.04 702.613 2135.72 700.424 2126.82C699.746 2124.53 699.646 2122.11 700.132 2119.78C701.574 2116.68 704.109 2114.22 707.248 2112.88C722.065 2104.32 736.881 2095.77 751.698 2087.25C754.342 2085.91 756.747 2084.14 758.814 2082.01C763.444 2076.48 762.762 2068.22 760.374 2061.42C757.986 2054.62 754.184 2048.21 753.258 2041.07C750.529 2019.69 773.339 2004.33 781.04 1984.17C783.658 1976.13 785.07 1967.73 785.231 1959.27C785.865 1950.17 785.913 1939.65 778.992 1933.83C772.315 1928.21 761.934 1929.48 754.964 1924.24C748.579 1919.45 746.386 1910.2 739.416 1906.34C733.08 1902.82 725.184 1905.07 718.117 1903.41C705.737 1900.52 697.939 1886.19 685.266 1884.86C678.15 1884.08 670.059 1887.6 664.211 1883.45C659.044 1879.73 658.849 1872.34 657.874 1866.08C656.144 1856.33 651.48 1847.34 644.509 1840.32C637.539 1833.31 628.596 1828.61 618.883 1826.85C611.523 1825.67 603.53 1826.11 597.242 1822.05C590.906 1817.94 588.031 1810.26 583.01 1804.54C575.017 1795.39 562.345 1792.11 550.501 1789.32C534.417 1785.56 518.349 1781.77 502.298 1777.97C493.768 1775.92 482.753 1774.84 478.123 1782.38C476.753 1785.24 475.801 1788.29 475.296 1791.43C473.555 1797.07 470.083 1802.02 465.375 1805.57C460.666 1809.12 454.962 1811.09 449.074 1811.19C445.044 1804.28 438.515 1799.2 430.846 1797C425.835 1796.16 420.885 1794.98 416.029 1793.48C413.493 1792.23 411.237 1790.48 409.399 1788.33C407.561 1786.18 406.181 1783.67 405.341 1780.96C404.502 1778.26 404.221 1775.41 404.517 1772.59C404.812 1769.77 405.678 1767.04 407.061 1764.57C409.824 1759.61 410.887 1753.87 410.086 1748.24C409.285 1742.61 406.664 1737.4 402.625 1733.41C394.437 1726.02 382.593 1724.21 371.578 1724.95C368.703 1718.63 373.528 1711.54 378.694 1706.94C383.909 1702.39 390.197 1697.89 391.318 1691.04C393.121 1680.28 379.425 1672.11 369.044 1675.29C358.662 1678.52 352.034 1688.65 347.647 1698.63C345.52 1704.51 342.618 1710.09 339.02 1715.21C337.177 1717.74 334.671 1719.71 331.781 1720.9C328.89 1722.1 325.728 1722.46 322.644 1721.96C314.065 1719.76 310.8 1709.54 308.899 1700.93C305.853 1689.42 304.313 1677.56 304.318 1665.65C304.392 1653.63 309.15 1642.11 317.575 1633.56C331.758 1620.45 353.593 1621.72 372.748 1623.83C370.696 1621.08 369.713 1617.68 369.982 1614.26C370.251 1610.83 371.755 1607.63 374.21 1605.24C376.774 1602.95 379.854 1601.33 383.183 1600.51C386.513 1599.69 389.991 1599.7 393.316 1600.54C399.091 1601.74 404.294 1604.86 408.084 1609.4C413.543 1616.05 415.103 1625.1 419.197 1632.63C423.34 1640.22 432.6 1646.67 440.155 1642.61C446.735 1639.09 447.758 1629.99 446.15 1622.7C444.493 1615.46 441.032 1608.37 441.617 1600.93C442.738 1586.8 457.409 1578.23 470.325 1572.41C483.241 1566.59 498.009 1558.72 500.056 1544.63C500.151 1541.89 500.677 1539.18 501.616 1536.6C503.045 1534.3 505.043 1532.42 507.416 1531.12C545.092 1506.13 583.45 1480.79 626.535 1467.14C628.777 1466.4 629.021 1467.19 631.312 1466.65C634.529 1464.79 632.384 1459.65 629.314 1457.6C626.243 1455.54 622.149 1453.93 621.369 1450.31C620.833 1447.67 622.393 1445.03 622.783 1442.33C622.884 1440.71 622.587 1439.08 621.918 1437.6C621.248 1436.12 620.227 1434.82 618.942 1433.83C617.658 1432.83 616.15 1432.17 614.55 1431.9C612.951 1431.62 611.309 1431.75 609.769 1432.26C606.309 1427.66 613.132 1422.33 618.688 1420.76C635.325 1416.19 652.398 1413.4 669.621 1412.44C671.609 1412.12 673.65 1412.46 675.421 1413.42C676.688 1414.65 677.439 1416.32 677.52 1418.08C677.602 1419.85 677.008 1421.57 675.86 1422.91C673.515 1425.53 670.919 1427.9 668.11 1430.01C665.314 1432.73 663.317 1436.18 662.337 1439.96C661.357 1443.75 661.433 1447.74 662.554 1451.48C671.571 1456.08 681.319 1460.83 691.31 1459.21C701.253 1457.6 710.075 1446.35 705.396 1437.39C701.058 1429.03 687.948 1427.12 685.705 1417.97C683.074 1407.26 698.183 1397.72 694.771 1387.25C693.309 1382.65 688.727 1379.91 685.218 1376.64C681.088 1372.55 678.279 1367.32 677.158 1361.61C676.036 1355.9 676.654 1349.99 678.93 1344.64C673.225 1345.64 667.363 1345.26 661.835 1343.52C656.307 1341.79 651.272 1338.75 647.152 1334.66C639.549 1326.98 633.505 1314.8 622.685 1315.19C612.791 1315.49 604.261 1327.08 595.001 1323.56C592.71 1322.68 590.322 1320.92 588.129 1321.94C587.405 1322.41 586.797 1323.04 586.349 1323.77C585.902 1324.51 585.627 1325.34 585.545 1326.2C583.206 1337.5 587.251 1350.37 581.11 1360.15C574.433 1370.76 558.982 1372.23 550.892 1381.82C546.505 1387.01 544.799 1394 540.754 1399.48C536.708 1404.96 528.179 1408.48 523.305 1403.69C525.692 1398.78 526.345 1393.2 525.159 1387.86C523.972 1382.53 521.016 1377.76 516.774 1374.34C512.285 1371.38 507.436 1369.01 502.347 1367.29C496.662 1364.88 491.253 1361.87 486.214 1358.29C483.703 1356.76 481.662 1354.55 480.317 1351.93C479.252 1348.63 479.39 1345.06 480.706 1341.85C483.174 1334.79 487.514 1328.53 493.259 1323.76C499.004 1318.98 505.937 1315.87 513.313 1314.75C519.747 1313.87 527.253 1314.16 531.542 1309.22C533.784 1306.63 534.953 1302.67 538.268 1301.64C540.356 1301.2 542.529 1301.46 544.458 1302.37C552.5 1305.21 560.493 1308.05 568.535 1310.89C571.216 1312.12 574.179 1312.61 577.113 1312.31C578.567 1312.12 579.896 1311.38 580.828 1310.24C581.761 1309.11 582.227 1307.66 582.133 1306.19C581.354 1302.18 575.212 1300.27 575.797 1296.21C576.081 1294.88 576.782 1293.68 577.795 1292.79C586.488 1283.51 597.117 1276.27 608.922 1271.59C620.727 1266.92 633.415 1264.92 646.08 1265.73C649.102 1270.77 644.325 1276.69 640.28 1280.95C636.283 1285.25 633.066 1292.88 637.94 1296.16C639.906 1297.2 642.106 1297.7 644.325 1297.63C650.252 1298.43 656.012 1300.18 661.384 1302.82C669.719 1306.44 677.907 1310.45 685.9 1314.75C684.723 1309.51 684.925 1304.05 686.485 1298.9C687.366 1296.38 689.151 1294.27 691.494 1293C693.837 1291.72 696.569 1291.37 699.157 1292C703.934 1293.86 706.371 1300.22 711.488 1300.81C718.263 1301.59 720.944 1291.52 718.117 1285.25C715.29 1278.99 709.636 1273.81 709.198 1266.91C708.857 1262.31 710.611 1256.59 706.956 1253.8C705.656 1252.93 704.168 1252.4 702.618 1252.23C672.009 1246.61 641.385 1240.96 610.744 1235.31C605.285 1234.28 597.438 1235.06 597.194 1240.59C597.048 1243.72 599.826 1246.8 598.608 1249.64C597.292 1252.67 593.003 1252.43 589.883 1253.5C587.54 1254.57 585.606 1256.38 584.375 1258.64C583.143 1260.91 582.682 1263.52 583.06 1266.08C583.893 1271.16 585.859 1276 588.811 1280.21C582.816 1277.72 573.799 1277.28 567.804 1274.74C566.932 1267.77 565.163 1260.94 562.54 1254.43C562.39 1253.4 562.016 1252.41 561.444 1251.53C560.871 1250.66 560.115 1249.92 559.227 1249.37C558.34 1248.82 557.343 1248.47 556.307 1248.35C555.271 1248.22 554.221 1248.33 553.231 1248.66C545.335 1249.88 537.439 1251.06 529.543 1252.28C527.561 1252.38 525.662 1253.11 524.133 1254.38C521.063 1257.66 524.085 1262.9 523.987 1267.4C523.702 1269.91 522.643 1272.28 520.957 1274.16C519.271 1276.05 517.042 1277.36 514.58 1277.92C509.62 1278.93 504.501 1278.86 499.569 1277.72C488.505 1276.01 477.49 1274.3 466.426 1272.58C476.192 1269.46 484.877 1263.63 491.478 1255.75C495.864 1250.57 498.204 1240.88 491.868 1238.44C489.997 1237.92 488.044 1237.77 486.116 1238C471.105 1238.09 459.261 1225.52 445.224 1220.19C440.81 1218.54 436.141 1217.68 431.431 1217.65L415.736 1236.97Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_9\" d=\"M1694.57 1718.05C1692.85 1720.36 1690.59 1722.22 1687.99 1723.46C1685.39 1724.69 1682.53 1725.27 1679.65 1725.14C1664.4 1723.82 1657.96 1701.76 1642.85 1699.26C1641.52 1698.92 1640.1 1699.06 1638.86 1699.65C1636.61 1700.88 1636.22 1703.91 1636.08 1706.45C1635.44 1719.07 1634.91 1732.19 1639.83 1743.83C1647 1760.85 1665.57 1775.14 1661.67 1793.19C1640.71 1783.45 1629.79 1759.83 1624.87 1737.18C1619.9 1714.53 1619.12 1690.75 1610.25 1669.32C1603.47 1677.98 1589.34 1670.84 1583.2 1661.74C1577.35 1653.13 1573.74 1643.15 1568.09 1634.39C1562.43 1625.69 1553.76 1617.86 1543.42 1617.37C1532.56 1616.88 1523.1 1624.37 1514.81 1631.46C1507.61 1636.8 1501.55 1643.56 1497.02 1651.32C1491.22 1663.06 1492.74 1676.86 1492.44 1689.92C1492.15 1704.01 1489.18 1718.93 1479.58 1729.3C1469.97 1739.62 1452.28 1743.24 1441.71 1733.9C1436.59 1728.55 1432.95 1721.96 1431.13 1714.77C1419.63 1681.14 1410.06 1646.87 1402.47 1612.14C1400.72 1620.06 1393.75 1630.28 1387.12 1625.64C1385.63 1624.37 1384.44 1622.8 1383.61 1621.04C1371.23 1600.05 1348.37 1587.43 1325.22 1579.85C1302.12 1572.31 1277.79 1568.79 1254.94 1560.48C1242.12 1555.8 1229.87 1549.68 1218.43 1542.23C1215.52 1546.53 1213.83 1551.53 1213.52 1556.71C1213.21 1561.89 1214.3 1567.07 1216.67 1571.68C1219.24 1576.19 1223.23 1579.73 1228 1581.74C1232.78 1583.74 1238.08 1584.11 1243.09 1582.78C1248.16 1581.12 1252.45 1577.6 1257.47 1575.84C1262.49 1574.12 1269.26 1574.96 1271.46 1579.85C1273.6 1584.5 1270.39 1590.12 1271.99 1595.01C1274.38 1602.4 1285.54 1602.99 1289.44 1609.74C1290.59 1612.41 1290.85 1615.38 1290.19 1618.22C1289.54 1621.05 1287.99 1623.6 1285.79 1625.49C1281.3 1629.16 1276.35 1632.22 1271.07 1634.59C1254.69 1643.74 1243.04 1659.34 1228.71 1671.48C1214.38 1683.66 1194.16 1692.51 1177.1 1684.73C1181.14 1664.04 1156.63 1648.87 1152.09 1628.28C1150.58 1621.48 1151.36 1614.29 1149.27 1607.68C1146.2 1598.1 1137.72 1591.54 1130.8 1584.3C1122.39 1575.41 1115.83 1564.93 1111.52 1553.46C1107.21 1541.99 1105.23 1529.77 1105.69 1517.52C1106.08 1509.01 1107.64 1500.35 1105.69 1492.04C1103.79 1483.77 1096.92 1475.75 1088.44 1476.09C1069.09 1476.97 1044.67 1478.44 1034.54 1461.85C1030.88 1455.93 1029.32 1447.28 1034.58 1442.73C1036.64 1441.42 1038.94 1440.53 1041.34 1440.12C1043.74 1439.71 1046.2 1439.78 1048.57 1440.33C1063.15 1441.75 1077.67 1443.22 1092.24 1444.63C1102.43 1445.61 1113.44 1446.44 1122.22 1441.11C1130.99 1435.78 1134.79 1421.54 1126.65 1415.23C1120.76 1410.63 1110.13 1410.88 1108.38 1403.59C1106.96 1397.48 1113.69 1390.58 1110.03 1385.44C1107.45 1381.82 1101.6 1382.8 1098.04 1385.54C1094.94 1388.77 1091.56 1391.74 1087.95 1394.39C1080.98 1398.01 1072.7 1394.54 1065.19 1392.19C1057.69 1389.84 1047.65 1389.65 1044.04 1396.64C1039.94 1404.42 1047.6 1414.69 1043.6 1422.52C1038.24 1432.84 1020.21 1426.97 1012.7 1435.88C1004.12 1446.05 1018.55 1461.32 1015.67 1474.33C1011.97 1476.17 1007.85 1477.02 1003.73 1476.79C999.602 1476.56 995.606 1475.25 992.131 1473.01C988.721 1470.68 986.004 1467.47 984.27 1463.71C982.536 1459.95 981.851 1455.79 982.286 1451.68C982.968 1445.81 986.039 1439.79 983.992 1434.26C981.785 1429.99 978.141 1426.65 973.708 1424.82C959.573 1416.95 945.439 1409.1 931.305 1401.29C927.357 1408.63 932.328 1417.68 938.567 1423.21C944.757 1428.69 952.555 1432.84 956.649 1440.08C959.241 1445.1 959.827 1450.92 958.287 1456.36C956.748 1461.8 953.198 1466.44 948.363 1469.34C947.751 1469.76 947.055 1470.04 946.323 1470.17C945.591 1470.3 944.841 1470.26 944.123 1470.07C943.447 1469.67 942.858 1469.14 942.389 1468.51C941.92 1467.88 941.582 1467.17 941.393 1466.4C933.936 1447.18 922.678 1428.25 904.741 1418.22C886.756 1408.14 860.973 1410.24 849.178 1427.12C846.4 1431.13 844.499 1435.73 842.062 1439.99C829.146 1462.54 801.365 1473.2 775.435 1472.52C772.899 1472.68 770.372 1472.08 768.173 1470.81C763.982 1467.92 764.177 1461.76 764.81 1456.67C765.736 1449.48 766.613 1442.33 767.539 1435.14C767.562 1430.75 769.253 1426.54 772.267 1423.35C777.092 1419.54 784.014 1421.93 790.155 1421.84C794.79 1421.63 799.248 1419.99 802.92 1417.15C806.593 1414.3 809.301 1410.39 810.674 1405.94C811.909 1401.45 811.899 1396.71 810.645 1392.22C809.391 1387.74 806.941 1383.69 803.558 1380.5C800.78 1377.86 797.027 1374.53 798.489 1370.96C799.084 1369.98 799.884 1369.13 800.835 1368.49C801.786 1367.85 802.865 1367.42 803.997 1367.24C814.963 1364.06 826.612 1363.23 837.383 1359.42C848.203 1355.65 858.682 1347.92 861.266 1336.72C862.046 1333.29 862.387 1329.13 865.457 1327.42C867.008 1326.8 868.661 1326.47 870.331 1326.44C876.192 1325.6 881.526 1322.59 885.287 1318C889.047 1313.41 890.962 1307.57 890.656 1301.64C895.822 1298.02 903.084 1300.71 908.104 1304.58C913.076 1308.44 917.511 1313.53 923.604 1315.19C934.96 1318.32 945.926 1308.2 957.721 1308.15C962.693 1308.15 967.81 1309.91 972.441 1308.2C977.168 1306.48 979.996 1301.79 983.602 1298.31C987.258 1294.79 993.594 1292.69 996.957 1296.46C995.982 1289.36 995.056 1282.32 994.081 1275.27C999.823 1276.72 1005.81 1276.93 1011.63 1275.86C1017.46 1274.8 1022.99 1272.5 1027.86 1269.11C1015.58 1264.95 1003.34 1260.79 991.059 1256.63C989.769 1256.32 988.579 1255.68 987.599 1254.78C984.918 1251.89 987.599 1247.39 989.743 1244.11C994.958 1236.23 995.836 1223.27 987.258 1219.36C981.409 1216.67 974.731 1219.9 969.126 1223.03C960.158 1228.02 951.19 1233.06 942.222 1238.04C941.394 1243.18 947.632 1246.12 951.483 1249.54C953.829 1251.63 955.49 1254.38 956.248 1257.44C957.005 1260.49 956.823 1263.71 955.726 1266.66C954.629 1269.6 952.667 1272.15 950.101 1273.96C947.534 1275.77 944.481 1276.76 941.345 1276.79C943.111 1279.1 944.339 1281.79 944.938 1284.64C945.537 1287.49 945.491 1290.44 944.806 1293.28C938.811 1293.72 932.767 1294.16 926.723 1294.6C925.719 1294.8 924.686 1294.8 923.682 1294.6C922.678 1294.39 921.724 1293.99 920.875 1293.42C918.925 1291.71 919.217 1288.68 918.73 1286.13C917.927 1283.09 916.235 1280.36 913.872 1278.3C911.509 1276.23 908.584 1274.92 905.473 1274.54C899.263 1273.84 892.977 1274.42 887 1276.25C884.402 1277.17 881.558 1277.1 879.007 1276.06C877.56 1275.09 876.465 1273.69 875.888 1272.04C874.827 1268.69 874.646 1265.12 875.364 1261.67C876.081 1258.23 877.671 1255.03 879.982 1252.38C884.662 1247.16 889.819 1242.4 895.384 1238.14C907.995 1227.06 917.264 1212.66 922.142 1196.56C932.085 1192.35 942.369 1186.68 952.36 1182.47C960.393 1178.74 968.81 1175.9 977.461 1174.01C985.603 1172.76 993.852 1172.37 1002.07 1172.83C1013.28 1173.03 1024.54 1173.23 1035.75 1173.47C1045.76 1173.05 1055.76 1174.49 1065.24 1177.73C1074.45 1181.54 1082.59 1189.81 1083.23 1199.79C1083.42 1200.93 1083.32 1202.09 1082.93 1203.18C1082.55 1204.27 1081.9 1205.24 1081.03 1206C1079.74 1206.72 1078.27 1207.06 1076.79 1206.98C1067.48 1207.27 1063.54 1209.62 1054.23 1209.96C1060.12 1216.28 1066.75 1222.93 1075.33 1224.05C1090.44 1226.01 1101.31 1210.31 1108.28 1196.66C1108.53 1200.13 1110.12 1203.37 1112.71 1205.68C1115.31 1208 1118.7 1209.2 1122.17 1209.04C1125.9 1208.39 1129.47 1206.99 1132.65 1204.93C1162.63 1188.48 1196.21 1179.77 1230.37 1179.59C1230.04 1176.99 1230.67 1174.36 1232.16 1172.21C1233.64 1170.06 1235.87 1168.54 1238.41 1167.94C1245.38 1166.57 1251.62 1172.59 1254.98 1178.85C1258.3 1185.11 1260.39 1192.35 1265.76 1197.05C1271.07 1201.75 1281.35 1201.5 1283.45 1194.75C1285.5 1188.24 1278.72 1182.67 1273.12 1178.8C1267.46 1174.99 1261.56 1167.89 1265.37 1162.22C1294.02 1155.81 1322.93 1149.45 1352.32 1148.18C1357.31 1148.33 1362.29 1147.47 1366.94 1145.63C1369.24 1144.66 1371.16 1142.94 1372.39 1140.76C1373.63 1138.57 1374.11 1136.04 1373.76 1133.55C1367.35 1135.05 1360.64 1134.61 1354.47 1132.28C1348.31 1129.94 1342.98 1125.82 1339.16 1120.44C1369.33 1117.95 1400.91 1115.74 1429.91 1122.54L1455.3 1144.17C1450.48 1149.21 1444.04 1153.95 1447.55 1158.99C1448.71 1160.15 1450.12 1161.03 1451.66 1161.56C1453.21 1162.09 1454.85 1162.27 1456.47 1162.07C1462.61 1162.17 1468.76 1162.32 1474.85 1162.32C1600.92 1283.35 1678.51 1446.49 1693.01 1620.99C1682.77 1620.6 1673.36 1633.61 1674.68 1644.96C1676.24 1658.12 1685.7 1668.69 1692.47 1680.04C1693.59 1681.88 1694.6 1683.79 1695.49 1685.76L1694.57 1718.05Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_10\" d=\"M1 2683.03L1784.97 2679.77\" stroke=\"#3F3D56\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\r\n        <path id=\"Vector_11\" d=\"M351.937 336.557C386.084 336.557 413.765 308.773 413.765 274.5C413.765 240.227 386.084 212.444 351.937 212.444C317.791 212.444 290.109 240.227 290.109 274.5C290.109 308.773 317.791 336.557 351.937 336.557Z\" stroke=\"#3F3D56\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\r\n        <path id=\"Vector_12\" d=\"M1756.75 900.111C1790.89 900.111 1818.58 872.328 1818.58 838.055C1818.58 803.782 1790.89 775.999 1756.75 775.999C1722.6 775.999 1694.92 803.782 1694.92 838.055C1694.92 872.328 1722.6 900.111 1756.75 900.111Z\" stroke=\"#3F3D56\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\r\n        <path id=\"Vector_13\" d=\"M1351.1 1431.94C1389.42 1431.94 1420.48 1400.76 1420.48 1362.29C1420.48 1323.83 1389.42 1292.65 1351.1 1292.65C1312.78 1292.65 1281.71 1323.83 1281.71 1362.29C1281.71 1400.76 1312.78 1431.94 1351.1 1431.94Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_14\" d=\"M1423.69 1819C1424.47 1813.87 1428.73 1809.34 1427.4 1804.37C1426.48 1800.94 1423.17 1799.24 1420.17 1799.16C1417.17 1799.07 1414.22 1800.15 1411.22 1800.25C1409.27 1800.13 1407.31 1800.16 1405.36 1800.35C1399.41 1801.53 1395.74 1809.03 1390.13 1811.7C1386.71 1813.32 1382.88 1813.01 1379.33 1814.13C1371.28 1816.67 1366.18 1825.82 1360.55 1833.2C1351.45 1845.06 1339.6 1853.37 1326.52 1857.05C1321.94 1858.32 1317.02 1859.14 1313.38 1862.71C1308.56 1867.45 1307.37 1875.56 1306.3 1882.94C1303.33 1903.29 1298.8 1923.27 1292.77 1942.63L1311.9 1945.56C1315.53 1946.12 1319.3 1946.66 1322.81 1945.37C1325.35 1944.22 1327.76 1942.67 1329.98 1940.78C1338.5 1934.42 1348.04 1930.28 1357.97 1928.63C1362.98 1927.81 1368.23 1927.66 1372.93 1929.89C1377.63 1932.13 1381.66 1937.21 1382.06 1943.27C1384.09 1942.51 1386.26 1942.42 1388.33 1943.03C1390.39 1943.63 1392.29 1944.9 1393.8 1946.7C1396.8 1950.37 1398.76 1955.07 1399.41 1960.15C1399.91 1963.3 1400.42 1967.07 1402.85 1968.39C1404.83 1969.46 1407.1 1968.3 1409.27 1968.09C1416.62 1967.39 1422.72 1977.69 1429.95 1975.92C1437.71 1974.02 1439.61 1960.06 1447.17 1957.27C1451.52 1955.66 1457.61 1957.61 1459.69 1952.76C1461.52 1948.48 1457.86 1943.54 1458.24 1938.74C1458.71 1932.84 1464.5 1930.34 1468.96 1927.82C1484.36 1919.14 1491.66 1894.24 1484.2 1875.87C1479.78 1864.99 1471.09 1856.43 1469.48 1844.47C1468.24 1835.28 1471.26 1824.55 1466.38 1817.31C1463.9 1813.63 1459.7 1811.6 1458.22 1807.2C1457.29 1804.44 1457.66 1801.3 1457.16 1798.38C1456.66 1795.45 1454.54 1792.4 1452.14 1793.16C1445.17 1795.35 1442.95 1821.23 1439.22 1827.51C1433.55 1837.07 1421.9 1830.78 1423.69 1819Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_15\" d=\"M680.768 1102.68L688.137 1104.39C686.781 1104.31 685.427 1104.59 684.167 1105.2C682.906 1105.8 681.768 1106.72 680.827 1107.9C679.887 1109.08 679.166 1110.48 678.713 1112.02C678.26 1113.56 678.085 1115.2 678.2 1116.82C685.101 1119.59 692.624 1116.9 699.893 1117.27C707.163 1117.63 715.62 1123.87 714.379 1132.49C714.004 1135.1 712.752 1137.7 713.403 1140.22C713.859 1141.99 715.158 1143.25 715.891 1144.88C717.419 1148.28 716.198 1152.57 714.269 1155.66C712.34 1158.75 709.747 1161.22 708.054 1164.5C703.842 1172.66 706.235 1183.21 708.744 1192.33C709.469 1195.78 710.809 1198.99 712.67 1201.75C716.386 1206.5 722.443 1206.92 727.868 1207.01C731.816 1207.08 736.339 1206.85 738.836 1203.17C742.095 1198.37 739.816 1190.88 741.962 1185.25C743.911 1180.13 748.877 1177.94 753.376 1176.38C761.619 1173.53 770.019 1171.1 777.811 1166.8C787.487 1161.45 796.53 1153.11 807.165 1152.42C810.149 1152.23 813.207 1152.65 816.081 1151.67C818.955 1150.69 821.685 1147.7 821.467 1144.12C821.282 1141.06 819.127 1138.81 817.444 1136.5C815.761 1134.2 814.439 1130.65 815.986 1128.21L843.862 1121.95C841.886 1115.48 840.347 1106.95 844.887 1102.74C846.526 1101.22 848.719 1100.61 850.114 1098.78C852.491 1095.64 851.296 1090.25 848.552 1087.59C845.807 1084.92 842.097 1084.3 838.581 1083.95C826.358 1082.73 814.065 1083.54 801.818 1084.35C777.878 1085.92 753.938 1087.5 729.998 1089.08C725.179 1089.39 719.615 1088.91 715.195 1090.89C711.453 1092.56 708.792 1095.63 704.512 1096.71C696.612 1098.7 687.918 1097.35 680.768 1102.68Z\" fill=\"#3F3D56\"/>\r\n      <g id=\"AnimationSvg\">\r\n        <path id=\"Vector_16\" d=\"M2919.81 1957.67H2890.26V3244.48H2919.81V1957.67Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_17\" d=\"M3177.91 2121.29C3179.7 2571.81 2906.31 2938.51 2906.31 2938.51C2906.31 2938.51 2630.01 2574.75 2628.22 2124.22C2626.43 1673.69 2899.82 1307 2899.82 1307C2899.82 1307 3176.12 1670.76 3177.91 2121.29Z\" fill=\"#575A89\"/>\r\n        <path id=\"Vector_18\" d=\"M2357.3 2562.83H2342.53V3226.08H2357.3V2562.83Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_19\" d=\"M2491.27 2647.76C2492.2 2879.58 2351.58 3068.25 2351.58 3068.25C2351.58 3068.25 2209.47 2881.09 2208.55 2649.27C2207.63 2417.46 2348.24 2228.78 2348.24 2228.78C2348.24 2228.78 2490.35 2415.95 2491.27 2647.76Z\" fill=\"#575A89\"/>\r\n        <path id=\"Vector_20\" d=\"M2642.5 3314.19C2858.77 3314.19 3034.09 3282.98 3034.09 3244.48C3034.09 3205.97 2858.77 3174.76 2642.5 3174.76C2426.23 3174.76 2250.91 3205.97 2250.91 3244.48C2250.91 3282.98 2426.23 3314.19 2642.5 3314.19Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_21\" d=\"M2674.13 1621.33C2640.99 1556.22 2575.41 1553.18 2575.41 1553.18C2575.41 1553.18 2511.52 1543.68 2470.53 1642.85C2432.32 1735.29 2379.6 1824.54 2462.04 1846.18L2476.93 1792.29L2486.15 1850.19C2497.89 1851.17 2509.67 1851.41 2521.43 1850.89C2609.72 1847.58 2693.8 1851.86 2691.1 1815.02C2687.5 1766.05 2706.02 1683.99 2674.13 1621.33Z\" fill=\"#2F2E41\"/>\r\n        <path id=\"Vector_22\" d=\"M2555.31 1743.06C2555.31 1743.06 2598.14 1812.6 2572.44 1868.89C2546.75 1925.18 2632.39 1984.78 2632.39 1984.78L2695.2 1825.84C2695.2 1825.84 2620.97 1769.55 2640.96 1716.57L2555.31 1743.06Z\" fill=\"#FBBEBE\"/>\r\n        <path id=\"Vector_23\" d=\"M2582.9 1772.73C2623.7 1772.73 2656.78 1734.37 2656.78 1687.04C2656.78 1639.71 2623.7 1601.35 2582.9 1601.35C2542.09 1601.35 2509.01 1639.71 2509.01 1687.04C2509.01 1734.37 2542.09 1772.73 2582.9 1772.73Z\" fill=\"#FBBEBE\"/>\r\n        <path id=\"Vector_24\" d=\"M2326.76 1786.87L2388.87 1693.97C2388.87 1693.97 2410.74 1596.59 2442.41 1601.53C2474.08 1606.47 2429.9 1718.31 2429.9 1718.31L2368.19 1821.14L2326.76 1786.87Z\" fill=\"#FBBEBE\"/>\r\n        <path id=\"Vector_25\" d=\"M2641.02 3024L2661.08 3146.95L2704.07 3160.24L2692.6 3014.03L2641.02 3024Z\" fill=\"#FBBEBE\"/>\r\n        <path id=\"Vector_26\" d=\"M3072.51 2891.57L3149.47 3014.81L3180.83 3031.46L3206.48 2981.5L3129.52 2864.92L3072.51 2891.57Z\" fill=\"#FBBEBE\"/>\r\n        <path id=\"Vector_27\" d=\"M2623.46 1932.34L2575.84 1859.6C2575.84 1859.6 2483.59 1879.34 2475.03 1889.28C2466.46 1899.21 2497.86 2081.4 2497.86 2081.4C2497.86 2081.4 2503.57 2131.09 2529.26 2157.59L2554.95 2177.46L2766.18 2127.77L2774.12 2018.71C2777.01 1978.98 2772.72 1938.99 2761.52 1901.3C2750.33 1863.61 2732.47 1829.06 2709.09 1799.84L2672.34 1805.67L2623.46 1932.34Z\" fill=\"#D0CDE1\"/>\r\n        <path id=\"Vector_28\" d=\"M2486.04 1896.05L2471.83 1889.43L2406.44 1882.82C2406.44 1882.82 2383.7 1876.2 2389.38 1862.96C2395.07 1849.73 2400.75 1846.42 2389.38 1843.11C2378.01 1839.8 2375.17 1836.49 2378.01 1826.56C2380.85 1816.64 2397.91 1796.78 2397.91 1796.78L2349.58 1750.46C2349.58 1750.46 2346.97 1752.61 2342.74 1756.6C2318.74 1779.21 2242.82 1860.79 2298.41 1942.37C2363.8 2038.33 2440.56 2094.58 2503.1 2074.73L2486.04 1896.05Z\" fill=\"#D0CDE1\"/>\r\n        <path id=\"Vector_29\" d=\"M2549.57 2162.17V2208.55C2549.57 2208.55 2523.87 2264.86 2532.43 2317.87C2541 2370.87 2543.86 2397.37 2543.86 2397.37C2544.79 2442.45 2551.53 2487.11 2563.85 2529.87C2583.84 2596.12 2518.15 3030.08 2600.97 3036.7C2683.79 3043.33 2729.48 3049.95 2755.18 3016.83C2780.89 2983.7 2712.35 2413.93 2712.35 2413.93C2712.35 2413.93 2946.52 2980.39 2995.07 2957.2C3043.62 2934.01 3166.42 2881.01 3152.14 2851.2C3137.86 2821.38 2778.03 2158.86 2778.03 2158.86L2766.61 2129.05L2549.57 2162.17Z\" fill=\"#2F2E41\"/>\r\n        <path id=\"Vector_30\" d=\"M2686.72 3123.72C2686.72 3123.72 2641.27 3120.39 2641.27 3137.03C2641.27 3153.67 2618.54 3210.25 2618.54 3210.25C2618.54 3210.25 2601.49 3276.81 2646.95 3270.15C2692.4 3263.49 2720.82 3203.59 2720.82 3203.59L2709.45 3140.36L2686.72 3123.72Z\" fill=\"#2F2E41\"/>\r\n        <path id=\"Vector_31\" d=\"M3163.02 3007.58C3163.02 3007.58 3122.99 2977.8 3125.85 2997.65C3128.71 3017.5 3131.57 3070.43 3151.58 3073.74C3171.6 3077.05 3231.64 3096.9 3234.5 3103.51C3237.36 3110.13 3305.98 3136.6 3305.98 3093.59C3305.98 3050.58 3263.09 3017.5 3263.09 3017.5L3214.49 2974.5C3214.49 2974.5 3183.03 2971.19 3177.32 2994.35C3171.6 3017.5 3163.02 3007.58 3163.02 3007.58Z\" fill=\"#2F2E41\"/>\r\n        <path id=\"Vector_32\" d=\"M2583.39 1608.13C2609.78 1608.13 2631.17 1583.42 2631.17 1552.94C2631.17 1522.46 2609.78 1497.75 2583.39 1497.75C2557 1497.75 2535.61 1522.46 2535.61 1552.94C2535.61 1583.42 2557 1608.13 2583.39 1608.13Z\" fill=\"#2F2E41\"/>\r\n        <path id=\"Vector_33\" d=\"M2530.97 1538.41C2530.97 1524.78 2535.37 1511.63 2543.32 1501.5C2551.27 1491.37 2562.21 1484.97 2574.03 1483.53C2572.35 1483.33 2570.66 1483.22 2568.96 1483.22C2556.2 1483.22 2543.96 1489.04 2534.93 1499.39C2525.9 1509.74 2520.83 1523.78 2520.83 1538.41C2520.83 1553.05 2525.9 1567.09 2534.93 1577.44C2543.96 1587.79 2556.2 1593.6 2568.96 1593.6C2570.66 1593.6 2572.35 1593.5 2574.03 1593.29C2562.21 1591.86 2551.27 1585.46 2543.32 1575.32C2535.37 1565.19 2530.97 1552.04 2530.97 1538.41Z\" fill=\"#2F2E41\"/>\r\n        <path id=\"Vector_34\" d=\"M2659.6 1615.34L2594.63 1576.17L2504.92 1592.2L2486.35 1686.56L2532.56 1684.51L2545.47 1649.85V1683.94L2566.79 1683L2579.16 1627.81L2586.9 1686.56L2662.69 1684.78L2659.6 1615.34Z\" fill=\"#2F2E41\"/>\r\n        <path id=\"Vector_35\" d=\"M2656.78 2168.79L2555.94 2171.89C2555.94 2171.89 2469.9 2190.98 2474.73 2151.39C2479.56 2111.81 2563.5 2125.66 2563.5 2125.66L2655.38 2109.68L2656.78 2168.79Z\" fill=\"#FBBEBE\"/>\r\n        <path id=\"Vector_36\" d=\"M2734.86 1794.31C2739.9 1793.43 2745.06 1794.66 2749.4 1797.78C2753.73 1800.9 2756.96 1805.71 2758.5 1811.34C2778.17 1883.04 2838.76 2122.96 2778.56 2155.88C2707.66 2194.65 2655.91 2192.94 2655.91 2192.94L2628.21 2114.06L2653.43 2086.69L2680.34 1886.47L2693.24 1801.6L2734.86 1794.31Z\" fill=\"#D0CDE1\"/>\r\n        <path id=\"Vector_37\" opacity=\"0.4\" d=\"M2715.89 1927.65L2704.47 2060.04L2604.57 2109.68L2715.89 2079.9V1927.65Z\" fill=\"black\"/>\r\n        <path id=\"Vector_38\" d=\"M2167.65 1496.77C2200.59 1504.08 2230.45 1525.27 2251.38 1556.19L2262.21 1572.18L2262.74 1572.83L2430.9 1615.3C2433.99 1616.08 2436.73 1618.22 2438.54 1621.25C2440.35 1624.29 2441.08 1627.99 2440.58 1631.54L2432.84 1686.48C2432.59 1688.27 2432.03 1689.98 2431.2 1691.49C2430.37 1693 2429.29 1694.3 2428.01 1695.31C2426.72 1696.32 2425.27 1697.01 2423.74 1697.36C2422.2 1697.7 2420.61 1697.69 2419.06 1697.32L2251.08 1657.32L2251.07 1657.33L2235.35 1665.83C2206.39 1681.48 2173.41 1685.42 2141.55 1677.03L2167.65 1496.77Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_39\" d=\"M2349.59 1646.73C2351.15 1640.57 2344.34 1632.84 2334.39 1629.46C2324.43 1626.08 2315.11 1628.33 2313.56 1634.49C2312 1640.65 2318.81 1648.39 2328.76 1651.77C2338.71 1655.15 2348.04 1652.89 2349.59 1646.73Z\" fill=\"#575A89\"/>\r\n        <path id=\"Vector_40\" d=\"M2345.9 1647.16C2349.75 1646.85 2352.54 1642.96 2352.13 1638.48C2351.72 1633.99 2348.27 1630.59 2344.42 1630.9C2340.57 1631.21 2337.78 1635.09 2338.19 1639.58C2338.6 1644.07 2342.05 1647.46 2345.9 1647.16Z\" fill=\"#3F3D56\"/>\r\n        <path id=\"Vector_41\" d=\"M2190.77 1598.27C2199.94 1548.41 2191.44 1503.42 2171.79 1497.78C2152.13 1492.14 2128.77 1527.99 2119.6 1577.84C2110.43 1627.7 2118.93 1672.7 2138.59 1678.34C2158.24 1683.98 2181.61 1648.13 2190.77 1598.27Z\" fill=\"#00BFA6\"/>\r\n        <path id=\"Vector_42\" opacity=\"0.4\" d=\"M2185.9 1596.63C2194.85 1548.46 2187.23 1504.83 2168.92 1496.67C2169.98 1496.73 2171.04 1496.92 2172.08 1497.21C2191.92 1502.85 2200.47 1547.96 2191.19 1597.95C2181.9 1647.94 2158.28 1683.9 2138.44 1678.25C2137.72 1678.05 2137.02 1677.79 2136.32 1677.47C2155.45 1678.74 2177.1 1643.99 2185.9 1596.63Z\" fill=\"black\"/>\r\n        <path id=\"Vector_43\" d=\"M1473 349.143L1493 344.265C1493 344.265 1476.2 367.189 1473 368.653C1472.7 373.523 1472.7 378.414 1473 383.285C1434.6 584.239 1293 495.468 1293 495.468C1344.6 496.931 1349 471.08 1349 471.08C1319 465.715 1313 441.815 1313 441.815C1315.69 443.547 1318.81 444.006 1321.76 443.106C1324.72 442.206 1327.29 440.01 1329 436.938C1296.6 426.695 1301 388.163 1301 388.163C1306.77 393.247 1313.52 396.438 1320.6 397.43C1317 392.065 1286.6 347.679 1305 324.755C1305 324.755 1327.4 373.53 1386.2 377.92L1390.2 376.944C1389.52 373.431 1389.25 369.819 1389.4 366.214C1389.4 352.631 1393.83 339.605 1401.7 330C1409.58 320.396 1420.26 315 1431.4 315C1459.4 315 1465.4 334.51 1465.4 334.51L1485.4 319.878C1485 319.878 1483 344.265 1473 349.143Z\" fill=\"#3F3D56\"/>\r\n      </g>\r\n      </g>\r\n      <g id=\"magnifyingGlass\">\r\n        <path id=\"Vector_44\" d=\"M1132.63 1396.73C1100.88 1365.49 1062.84 1340.58 1020.76 1323.45C978.677 1306.33 933.397 1297.34 887.584 1297.01C841.772 1296.68 796.353 1305.03 754.002 1321.55C711.651 1338.07 673.223 1362.44 640.98 1393.22C510.974 1517.17 508.774 1718.96 635.929 1845.43C691.782 1901.06 766.652 1936.2 847.278 1944.63C927.905 1953.06 1009.08 1934.23 1076.44 1891.48L1324.73 2135.63C1326.25 2137.13 1328.07 2138.33 1330.08 2139.17C1332.09 2140 1334.26 2140.45 1336.45 2140.49C1338.65 2140.53 1340.83 2140.16 1342.87 2139.41C1344.92 2138.65 1346.79 2137.52 1348.37 2136.08L1410.24 2079.82C1411.82 2078.38 1413.09 2076.66 1413.98 2074.76C1414.86 2072.86 1415.33 2070.81 1415.38 2068.73C1415.42 2066.66 1415.03 2064.59 1414.23 2062.66C1413.43 2060.72 1412.23 2058.96 1410.71 2057.46L1162.42 1813.31C1210.02 1751.64 1233.12 1676.07 1227.68 1599.89C1222.23 1523.71 1188.58 1451.78 1132.63 1396.73ZM1055.29 1789.32C1020.27 1821.17 976.053 1842.49 928.223 1850.58C880.394 1858.67 831.103 1853.17 786.582 1834.76C742.062 1816.36 704.312 1785.88 678.106 1747.19C651.9 1708.5 638.416 1663.32 639.357 1617.38C640.299 1571.44 655.625 1526.8 683.397 1489.09C711.169 1451.39 750.14 1422.32 795.382 1405.56C840.623 1388.8 890.103 1385.11 937.565 1394.95C985.027 1404.78 1028.34 1427.71 1062.02 1460.82C1084.39 1482.81 1101.96 1508.75 1113.72 1537.15C1125.49 1565.56 1131.22 1595.89 1130.6 1626.39C1129.97 1656.89 1123 1686.98 1110.08 1714.94C1097.16 1742.89 1078.54 1768.17 1055.29 1789.32Z\" fill=\"#00BFA6\"/>\r\n        <path id=\"Vector_45\" d=\"M703.076 1557.19C675.44 1557.19 675.395 1597.78 703.076 1597.78C730.756 1597.78 730.733 1557.19 703.076 1557.19Z\" fill=\"#00BFA6\"/>\r\n        <path id=\"Vector_46\" d=\"M895.649 1427.19C821.295 1425.6 753.61 1460.88 717.645 1514.24C705.904 1531.6 739.242 1546.95 750.916 1529.67C780.706 1485.58 837.325 1457.49 898.5 1459.04C962.661 1460.57 1021.05 1495.28 1051.97 1543.45C1063.71 1561.73 1094.42 1545.11 1082.77 1526.93C1045.25 1468.44 972.472 1428.85 895.649 1427.19Z\" fill=\"#00BFA6\"/>\r\n      </g>\r\n      </g>\r\n    </svg>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","const countryCodeNameMap = {\r\n  AF: \"Afghanistan\",\r\n  AX: \"Åland Islands\",\r\n  AL: \"Albania\",\r\n  DZ: \"Algeria\",\r\n  AS: \"American Samoa\",\r\n  AD: \"AndorrA\",\r\n  AO: \"Angola\",\r\n  AI: \"Anguilla\",\r\n  AQ: \"Antarctica\",\r\n  AG: \"Antigua and Barbuda\",\r\n  AR: \"Argentina\",\r\n  AM: \"Armenia\",\r\n  AW: \"Aruba\",\r\n  AU: \"Australia\",\r\n  AT: \"Austria\",\r\n  AZ: \"Azerbaijan\",\r\n  BS: \"Bahamas\",\r\n  BH: \"Bahrain\",\r\n  BD: \"Bangladesh\",\r\n  BB: \"Barbados\",\r\n  BY: \"Belarus\",\r\n  BE: \"Belgium\",\r\n  BZ: \"Belize\",\r\n  BJ: \"Benin\",\r\n  BM: \"Bermuda\",\r\n  BT: \"Bhutan\",\r\n  BO: \"Bolivia\",\r\n  BA: \"Bosnia and Herzegovina\",\r\n  BW: \"Botswana\",\r\n  BV: \"Bouvet Island\",\r\n  BR: \"Brazil\",\r\n  IO: \"British Indian Ocean Territory\",\r\n  BN: \"Brunei Darussalam\",\r\n  BG: \"Bulgaria\",\r\n  BF: \"Burkina Faso\",\r\n  BI: \"Burundi\",\r\n  KH: \"Cambodia\",\r\n  CM: \"Cameroon\",\r\n  CA: \"Canada\",\r\n  CV: \"Cape Verde\",\r\n  KY: \"Cayman Islands\",\r\n  CF: \"Central African Republic\",\r\n  TD: \"Chad\",\r\n  CL: \"Chile\",\r\n  CN: \"China\",\r\n  CX: \"Christmas Island\",\r\n  CC: \"Cocos (Keeling) Islands\",\r\n  CO: \"Colombia\",\r\n  KM: \"Comoros\",\r\n  CG: \"Congo\",\r\n  CD: \"Congo, The Democratic Republic of the\",\r\n  CK: \"Cook Islands\",\r\n  CR: \"Costa Rica\",\r\n  CI: \"Cote D'Ivoire\",\r\n  HR: \"Croatia\",\r\n  CU: \"Cuba\",\r\n  CY: \"Cyprus\",\r\n  CZ: \"Czech Republic\",\r\n  DK: \"Denmark\",\r\n  DJ: \"Djibouti\",\r\n  DM: \"Dominica\",\r\n  DO: \"Dominican Republic\",\r\n  EC: \"Ecuador\",\r\n  EG: \"Egypt\",\r\n  SV: \"El Salvador\",\r\n  GQ: \"Equatorial Guinea\",\r\n  ER: \"Eritrea\",\r\n  EE: \"Estonia\",\r\n  ET: \"Ethiopia\",\r\n  FK: \"Falkland Islands (Malvinas)\",\r\n  FO: \"Faroe Islands\",\r\n  FJ: \"Fiji\",\r\n  FI: \"Finland\",\r\n  FR: \"France\",\r\n  GF: \"French Guiana\",\r\n  PF: \"French Polynesia\",\r\n  TF: \"French Southern Territories\",\r\n  GA: \"Gabon\",\r\n  GM: \"Gambia\",\r\n  GE: \"Georgia\",\r\n  DE: \"Germany\",\r\n  GH: \"Ghana\",\r\n  GI: \"Gibraltar\",\r\n  GR: \"Greece\",\r\n  GL: \"Greenland\",\r\n  GD: \"Grenada\",\r\n  GP: \"Guadeloupe\",\r\n  GU: \"Guam\",\r\n  GT: \"Guatemala\",\r\n  GG: \"Guernsey\",\r\n  GN: \"Guinea\",\r\n  GW: \"Guinea-Bissau\",\r\n  GY: \"Guyana\",\r\n  HT: \"Haiti\",\r\n  HM: \"Heard Island and Mcdonald Islands\",\r\n  VA: \"Holy See (Vatican City State)\",\r\n  HN: \"Honduras\",\r\n  HK: \"Hong Kong\",\r\n  HU: \"Hungary\",\r\n  IS: \"Iceland\",\r\n  IN: \"India\",\r\n  ID: \"Indonesia\",\r\n  IR: \"Iran, Islamic Republic Of\",\r\n  IQ: \"Iraq\",\r\n  IE: \"Ireland\",\r\n  IM: \"Isle of Man\",\r\n  IL: \"Israel\",\r\n  IT: \"Italy\",\r\n  JM: \"Jamaica\",\r\n  JP: \"Japan\",\r\n  JE: \"Jersey\",\r\n  JO: \"Jordan\",\r\n  KZ: \"Kazakhstan\",\r\n  KE: \"Kenya\",\r\n  KI: \"Kiribati\",\r\n  KP: \"Korea, Democratic People'S Republic of\",\r\n  KR: \"Korea, Republic of\",\r\n  KW: \"Kuwait\",\r\n  KG: \"Kyrgyzstan\",\r\n  LA: \"Lao People'S Democratic Republic\",\r\n  LV: \"Latvia\",\r\n  LB: \"Lebanon\",\r\n  LS: \"Lesotho\",\r\n  LR: \"Liberia\",\r\n  LY: \"Libyan Arab Jamahiriya\",\r\n  LI: \"Liechtenstein\",\r\n  LT: \"Lithuania\",\r\n  LU: \"Luxembourg\",\r\n  MO: \"Macao\",\r\n  MK: \"Macedonia, The Former Yugoslav Republic of\",\r\n  MG: \"Madagascar\",\r\n  MW: \"Malawi\",\r\n  MY: \"Malaysia\",\r\n  MV: \"Maldives\",\r\n  ML: \"Mali\",\r\n  MT: \"Malta\",\r\n  MH: \"Marshall Islands\",\r\n  MQ: \"Martinique\",\r\n  MR: \"Mauritania\",\r\n  MU: \"Mauritius\",\r\n  YT: \"Mayotte\",\r\n  MX: \"Mexico\",\r\n  FM: \"Micronesia, Federated States of\",\r\n  MD: \"Moldova, Republic of\",\r\n  MC: \"Monaco\",\r\n  MN: \"Mongolia\",\r\n  MS: \"Montserrat\",\r\n  ME: \"Montenegro\",\r\n  MA: \"Morocco\",\r\n  MZ: \"Mozambique\",\r\n  MM: \"Myanmar\",\r\n  NA: \"Namibia\",\r\n  NR: \"Nauru\",\r\n  NP: \"Nepal\",\r\n  NL: \"Netherlands\",\r\n  AN: \"Netherlands Antilles\",\r\n  NC: \"New Caledonia\",\r\n  NZ: \"New Zealand\",\r\n  NI: \"Nicaragua\",\r\n  NE: \"Niger\",\r\n  NG: \"Nigeria\",\r\n  NU: \"Niue\",\r\n  NF: \"Norfolk Island\",\r\n  MP: \"Northern Mariana Islands\",\r\n  NO: \"Norway\",\r\n  OM: \"Oman\",\r\n  PK: \"Pakistan\",\r\n  PW: \"Palau\",\r\n  PS: \"Palestinian Territory, Occupied\",\r\n  PA: \"Panama\",\r\n  PG: \"Papua New Guinea\",\r\n  PY: \"Paraguay\",\r\n  PE: \"Peru\",\r\n  PH: \"Philippines\",\r\n  PN: \"Pitcairn\",\r\n  PL: \"Poland\",\r\n  PT: \"Portugal\",\r\n  PR: \"Puerto Rico\",\r\n  QA: \"Qatar\",\r\n  RE: \"Reunion\",\r\n  RO: \"Romania\",\r\n  RU: \"Russian Federation\",\r\n  RW: \"RWANDA\",\r\n  SH: \"Saint Helena\",\r\n  KN: \"Saint Kitts and Nevis\",\r\n  LC: \"Saint Lucia\",\r\n  PM: \"Saint Pierre and Miquelon\",\r\n  VC: \"Saint Vincent and the Grenadines\",\r\n  WS: \"Samoa\",\r\n  SM: \"San Marino\",\r\n  ST: \"Sao Tome and Principe\",\r\n  SA: \"Saudi Arabia\",\r\n  SN: \"Senegal\",\r\n  RS: \"Serbia\",\r\n  SC: \"Seychelles\",\r\n  SL: \"Sierra Leone\",\r\n  SG: \"Singapore\",\r\n  SK: \"Slovakia\",\r\n  SI: \"Slovenia\",\r\n  SB: \"Solomon Islands\",\r\n  SO: \"Somalia\",\r\n  ZA: \"South Africa\",\r\n  GS: \"South Georgia and the South Sandwich Islands\",\r\n  ES: \"Spain\",\r\n  LK: \"Sri Lanka\",\r\n  SD: \"Sudan\",\r\n  SR: \"Suriname\",\r\n  SJ: \"Svalbard and Jan Mayen\",\r\n  SZ: \"Swaziland\",\r\n  SE: \"Sweden\",\r\n  CH: \"Switzerland\",\r\n  SY: \"Syrian Arab Republic\",\r\n  TW: \"Taiwan, Province of China\",\r\n  TJ: \"Tajikistan\",\r\n  TZ: \"Tanzania, United Republic of\",\r\n  TH: \"Thailand\",\r\n  TL: \"Timor-Leste\",\r\n  TG: \"Togo\",\r\n  TK: \"Tokelau\",\r\n  TO: \"Tonga\",\r\n  TT: \"Trinidad and Tobago\",\r\n  TN: \"Tunisia\",\r\n  TR: \"Turkey\",\r\n  TM: \"Turkmenistan\",\r\n  TC: \"Turks and Caicos Islands\",\r\n  TV: \"Tuvalu\",\r\n  UG: \"Uganda\",\r\n  UA: \"Ukraine\",\r\n  AE: \"United Arab Emirates\",\r\n  GB: \"United Kingdom\",\r\n  US: \"United States\",\r\n  UM: \"United States Minor Outlying Islands\",\r\n  UY: \"Uruguay\",\r\n  UZ: \"Uzbekistan\",\r\n  VU: \"Vanuatu\",\r\n  VE: \"Venezuela\",\r\n  VN: \"VietNam\",\r\n  VG: \"Virgin Islands, British\",\r\n  VI: \"Virgin Islands, U.S.\",\r\n  WF: \"Wallis and Futuna\",\r\n  EH: \"Western Sahara\",\r\n  YE: \"Yemen\",\r\n  ZM: \"Zambia\",\r\n  ZW: \"Zimbabwe\",\r\n};\r\n\r\nconst countryCodeCount = {\r\n  AF: 0,\r\n  AX: 0,\r\n  AL: 0,\r\n  DZ: 0,\r\n  AS: 0,\r\n  AD: 0,\r\n  AO: 0,\r\n  AI: 0,\r\n  AQ: 0,\r\n  AG: 0,\r\n  AR: 0,\r\n  AM: 0,\r\n  AW: 0,\r\n  AU: 0,\r\n  AT: 0,\r\n  AZ: 0,\r\n  BS: 0,\r\n  BH: 0,\r\n  BD: 0,\r\n  BB: 0,\r\n  BY: 0,\r\n  BE: 0,\r\n  BZ: 0,\r\n  BJ: 0,\r\n  BM: 0,\r\n  BT: 0,\r\n  BO: 0,\r\n  BA: 0,\r\n  BW: 0,\r\n  BV: 0,\r\n  BR: 0,\r\n  IO: 0,\r\n  BN: 0,\r\n  BG: 0,\r\n  BF: 0,\r\n  BI: 0,\r\n  KH: 0,\r\n  CM: 0,\r\n  CA: 0,\r\n  CV: 0,\r\n  KY: 0,\r\n  CF: 0,\r\n  TD: 0,\r\n  CL: 0,\r\n  CN: 0,\r\n  CX: 0,\r\n  CC: 0,\r\n  CO: 0,\r\n  KM: 0,\r\n  CG: 0,\r\n  CD: 0,\r\n  CK: 0,\r\n  CR: 0,\r\n  CI: 0,\r\n  HR: 0,\r\n  CU: 0,\r\n  CY: 0,\r\n  CZ: 0,\r\n  DK: 0,\r\n  DJ: 0,\r\n  DM: 0,\r\n  DO: 0,\r\n  EC: 0,\r\n  EG: 0,\r\n  SV: 0,\r\n  GQ: 0,\r\n  ER: 0,\r\n  EE: 0,\r\n  ET: 0,\r\n  FK: 0,\r\n  FO: 0,\r\n  FJ: 0,\r\n  FI: 0,\r\n  FR: 0,\r\n  GF: 0,\r\n  PF: 0,\r\n  TF: 0,\r\n  GA: 0,\r\n  GM: 0,\r\n  GE: 0,\r\n  DE: 0,\r\n  GH: 0,\r\n  GI: 0,\r\n  GR: 0,\r\n  GL: 0,\r\n  GD: 0,\r\n  GP: 0,\r\n  GU: 0,\r\n  GT: 0,\r\n  GG: 0,\r\n  GN: 0,\r\n  GW: 0,\r\n  GY: 0,\r\n  HT: 0,\r\n  HM: 0,\r\n  VA: 0,\r\n  HN: 0,\r\n  HK: 0,\r\n  HU: 0,\r\n  IS: 0,\r\n  IN: 0,\r\n  ID: 0,\r\n  IR: 0,\r\n  IQ: 0,\r\n  IE: 0,\r\n  IM: 0,\r\n  IL: 0,\r\n  IT: 0,\r\n  JM: 0,\r\n  JP: 0,\r\n  JE: 0,\r\n  JO: 0,\r\n  KZ: 0,\r\n  KE: 0,\r\n  KI: 0,\r\n  KP: 0,\r\n  KR: 0,\r\n  KW: 0,\r\n  KG: 0,\r\n  LA: 0,\r\n  LV: 0,\r\n  LB: 0,\r\n  LS: 0,\r\n  LR: 0,\r\n  LY: 0,\r\n  LI: 0,\r\n  LT: 0,\r\n  LU: 0,\r\n  MO: 0,\r\n  MK: 0,\r\n  MG: 0,\r\n  MW: 0,\r\n  MY: 0,\r\n  MV: 0,\r\n  ML: 0,\r\n  MT: 0,\r\n  MH: 0,\r\n  MQ: 0,\r\n  MR: 0,\r\n  MU: 0,\r\n  YT: 0,\r\n  MX: 0,\r\n  FM: 0,\r\n  MD: 0,\r\n  MC: 0,\r\n  MN: 0,\r\n  MS: 0,\r\n  ME: 0,\r\n  MA: 0,\r\n  MZ: 0,\r\n  MM: 0,\r\n  NA: 0,\r\n  NR: 0,\r\n  NP: 0,\r\n  NL: 0,\r\n  AN: 0,\r\n  NC: 0,\r\n  NZ: 0,\r\n  NI: 0,\r\n  NE: 0,\r\n  NG: 0,\r\n  NU: 0,\r\n  NF: 0,\r\n  MP: 0,\r\n  NO: 0,\r\n  OM: 0,\r\n  PK: 0,\r\n  PW: 0,\r\n  PS: 0,\r\n  PA: 0,\r\n  PG: 0,\r\n  PY: 0,\r\n  PE: 0,\r\n  PH: 0,\r\n  PN: 0,\r\n  PL: 0,\r\n  PT: 0,\r\n  PR: 0,\r\n  QA: 0,\r\n  RE: 0,\r\n  RO: 0,\r\n  RU: 0,\r\n  RW: 0,\r\n  SH: 0,\r\n  KN: 0,\r\n  LC: 0,\r\n  PM: 0,\r\n  VC: 0,\r\n  WS: 0,\r\n  SM: 0,\r\n  ST: 0,\r\n  SA: 0,\r\n  SN: 0,\r\n  RS: 0,\r\n  SC: 0,\r\n  SL: 0,\r\n  SG: 0,\r\n  SK: 0,\r\n  SI: 0,\r\n  SB: 0,\r\n  SO: 0,\r\n  ZA: 0,\r\n  GS: 0,\r\n  ES: 0,\r\n  LK: 0,\r\n  SD: 0,\r\n  SR: 0,\r\n  SJ: 0,\r\n  SZ: 0,\r\n  SE: 0,\r\n  CH: 0,\r\n  SY: 0,\r\n  TW: 0,\r\n  TJ: 0,\r\n  TZ: 0,\r\n  TH: 0,\r\n  TL: 0,\r\n  TG: 0,\r\n  TK: 0,\r\n  TO: 0,\r\n  TT: 0,\r\n  TN: 0,\r\n  TR: 0,\r\n  TM: 0,\r\n  TC: 0,\r\n  TV: 0,\r\n  UG: 0,\r\n  UA: 0,\r\n  AE: 0,\r\n  GB: 0,\r\n  US: 0,\r\n  UM: 0,\r\n  UY: 0,\r\n  UZ: 0,\r\n  VU: 0,\r\n  VE: 0,\r\n  VN: 0,\r\n  VG: 0,\r\n  VI: 0,\r\n  WF: 0,\r\n  EH: 0,\r\n  YE: 0,\r\n  ZM: 0,\r\n  ZW: 0,\r\n};\r\n\r\nconst countryNames = Object.values(countryCodeNameMap);\r\nconst countryCodes = Object.keys(countryCodeNameMap);\r\n\r\nconst codeExists = (code) => {\r\n  return countryCodeNameMap[code] !== undefined;\r\n};\r\n\r\nconst hasJapanese = (text) => {\r\n  const japanese = /[\\u3000-\\u303f\\u3040-\\u309f\\u30a0-\\u30ff\\uff00-\\uff9f\\u4e00-\\u9faf\\u3400-\\u4dbf]/;\r\n  return japanese.test(text);\r\n}\r\n    \r\nconst hasKorean = (text) => {\r\n  const korean = /[\\uac00-\\ud7af]|[\\u1100-\\u11ff]|[\\u3130-\\u318f]|[\\ua960-\\ua97f]|[\\ud7b0-\\ud7ff]/;\r\n  return korean.test(text);\r\n}\r\n\r\nconst hasChinese = (text) => {\r\n  const chinese = /[\\u4E00-\\u9FCC\\u3400-\\u4DB5\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\ud840-\\ud868][\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|[\\ud86a-\\ud86c][\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d]/;\r\n  return chinese.test(text);\r\n}\r\n\r\nconst hasIndian = (text) => {\r\n  const indian = /[\\u0900-\\u097F\\u0980-\\u09FF\\u0A00-\\u0A7F\\u0A80-\\u0AFF\\u0B00-\\u0B7F\\u0B80-\\u0BFF\\u0C00-\\u0C7F\\u0C80-\\u0CFF\\u0D00-\\u0D7F\\u0F00-\\u0FFF]/;\r\n  return indian.test(text);\r\n}\r\n\r\nconst hasSinhala = (text) => {\r\n  const sinhala = /[\\u0D80-\\u0DFF]/;\r\n  return sinhala.test(text);\r\n}\r\n\r\nconst hasBurmese = (text) => {\r\n  const burmese = /[\\u1000-\\u109F]/;\r\n  return burmese.test(text);\r\n}\r\n\r\nconst hasThai = (text) => {\r\n  const thai = /[\\u0E00-\\u0E7F]/;\r\n  return thai.test(text);\r\n}\r\n\r\nconst hasLao = (text) => {\r\n  const lao = /[\\u0E80-\\u0EFF]/;\r\n  return lao.test(text);\r\n}\r\n\r\nconst hasKhmer = (text) => {\r\n  const khmer = /[\\u1780-\\u17FF]/;\r\n  return khmer.test(text);\r\n}\r\n\r\nconst hasArmeninan = (text) => {\r\n  const armenian = /[\\u0530-\\u058F]/;\r\n  return armenian.test(text);\r\n}\r\n\r\nconst hasGeorgian = (text) => {\r\n  const georgian = /[\\u10A0-\\u10FF]/;\r\n  return georgian.test(text);\r\n}\r\n\r\nconst hasGreek = (text) => {\r\n  const greek = /[\\u0370-\\u03FF\\u1F00-\\u1FFF]/;\r\n  return greek.test(text);\r\n}\r\n\r\nconst hasHebrew = (text) => {\r\n  const hebrew = /[\\u0590-\\u05FF]/;\r\n  return hebrew.test(text);\r\n}\r\n\r\nconst hasMongolian = (text) => {\r\n  const mongolian = /[\\u1800-\\u18AF]/;\r\n  return mongolian.test(text);\r\n}\r\n\r\nconst hasEnglish = (text) => {\r\n  const english = /[A-Za-z0-9\\s,./!@#$%^&*()_\\-=+{}[\\]|\\\\:;'\"/?><`~]/;\r\n  return english.test(text);\r\n}\r\n\r\nconst getCountryCodeFromLang = (text) => {\r\n  if(hasBurmese(text))  return 'MM';\r\n  else if(hasChinese(text))  return 'CN';\r\n  else if(hasIndian(text))  return 'IN';\r\n  else if(hasJapanese(text))  return 'JP';\r\n  else if(hasKorean(text))  return 'KR';\r\n  else if(hasSinhala(text))  return 'LK';\r\n  else if(hasKhmer(text))  return 'KH';\r\n  else if(hasThai(text))  return 'TH';\r\n  else if(hasLao(text))  return 'LA';\r\n  else if(hasArmeninan(text))  return 'AM';\r\n  else if(hasGeorgian(text))  return 'GE';\r\n  else if(hasMongolian(text))  return 'MN';\r\n  else if(hasGreek(text))  return 'GR';\r\n  else if(hasHebrew(text))  return 'IL';\r\n  else return '';\r\n}\r\n\r\nconst checkCountriesMan = async (location) => {\r\n  if (/\\bsouth africa\\b/gi.test(location)) {\r\n    return 'ZA';\r\n  } else if (/\\bUK\\b/gi.test(location) || /\\bGB\\b/gi.test(location) || /\\bscotland\\b/gi.test(location) || /\\bbritain\\b/gi.test(location) || /\\bgreat britain\\b/gi.test(location) || /\\bunited kingdom\\b/gi.test(location) || /\\bengland\\b/gi.test(location) || /\\bLDN\\b/gi.test(location) || /\\blondon\\b/gi.test(location) || /\\bmanchester\\b/gi.test(location)) {\r\n    return 'GB';\r\n  } else if (/\\bUS\\b/gi.test(location) || /\\bUSA\\b/gi.test(location) || /\\bunited states\\b/gi.test(location) || /\\bunited state\\b/gi.test(location) || /\\bunited states of america\\b/gi.test(location) || /\\bunited states america\\b/gi.test(location) || /\\bamerica\\b/gi.test(location) || /\\bNJ\\b/gi.test(location) || /\\bNV\\b/gi.test(location) || /\\bNY\\b/gi.test(location) || /\\bNYC\\b/gi.test(location) || /\\bLA\\b/gi.test(location) || /\\bDC\\b/gi.test(location) || /\\bD.C\\b/gi.test(location) || /\\bD.C.\\b/gi.test(location) || /\\bblvd\\b/gi.test(location) || /\\bblvd.\\b/gi.test(location) || /\\bavenue\\b/gi.test(location) || /\\bbuilding\\b/gi.test(location) || /\\bstreet\\b/gi.test(location) || /\\bview\\b/gi.test(location) || /\\bbay\\b/gi.test(location) || /\\bocean\\b/gi.test(location) || /\\bbeach\\b/gi.test(location) || /\\barea 51\\b/gi.test(location) || /\\barea51\\b/gi.test(location) || /\\barea\\b/gi.test(location) || /\\bstreet\\b/gi.test(location) || /\\bwall street\\b/gi.test(location) || /\\bwall st\\b/gi.test(location) || /\\bwall st.\\b/gi.test(location) || /\\barea\\b/gi.test(location) || /\\btx\\b/gi.test(location) || /\\bfl\\b/gi.test(location) || /\\btexas\\b/gi.test(location) || /\\bflorida\\b/gi.test(location) || /\\bminneapolis\\b/gi.test(location) || /\\bphiladelphia\\b/gi.test(location) || /\\bphily\\b/gi.test(location) || /\\bphilly\\b/gi.test(location) || /\\bdallas\\b/gi.test(location) || /\\baustin\\b/gi.test(location) || /\\bmiami\\b/gi.test(location) || /\\batlanta\\b/gi.test(location) || /\\bseattle\\b/gi.test(location) || /\\bsilicon\\b/gi.test(location)) {\r\n    return 'US';\r\n  } else if (/\\bUAE\\b/gi.test(location) || /\\bemirates\\b/gi.test(location) || /\\bemirate\\b/gi.test(location) || /\\bemirati\\b/gi.test(location) || /\\bunited arab emirates\\b/gi.test(location) || /\\bunited arab emirate\\b/gi.test(location) || /\\bunited arab emirati\\b/gi.test(location) || /\\bdubai\\b/gi.test(location) || /\\sharjah\\b/gi.test(location)) {\r\n    return 'AE';\r\n  } else if (/\\bcanada\\b/gi.test(location)) {\r\n    return 'CA';\r\n  } else if (/\\bfrance\\b/gi.test(location) || /\\bparis\\b/gi.test(location)) {\r\n    return 'FR';\r\n  } else if (/\\bspain\\b/gi.test(location) || /\\bmadrid\\b/gi.test(location) || /\\bbarcelona\\b/gi.test(location) || /\\bcatalan\\b/gi.test(location) || /\\bcatalonia\\b/gi.test(location)) {\r\n    return 'ES';\r\n  } else if (/\\bgermany\\b/gi.test(location) || /\\bdeutschland\\b/gi.test(location) || /\\bberlin\\b/gi.test(location) || /\\bfrankfurt\\b/gi.test(location)) {\r\n    return 'DE';\r\n  } else if (/\\bnetherlands\\b/gi.test(location) || /\\bnetherland\\b/gi.test(location) || /\\bdutch\\b/gi.test(location) || /\\bholland\\b/gi.test(location)) {\r\n    return 'NL';\r\n  } else if (/\\bitaly\\b/gi.test(location) || /\\brome\\b/gi.test(location)) {\r\n    return 'IT';\r\n  } else if (/\\bkorea\\b/gi.test(location) || /\\bseoul\\b/gi.test(location)) {\r\n    return 'KR';\r\n  } else if (/\\bjapan\\b/gi.test(location) || /\\btokyo\\b/gi.test(location) || /\\bosaka\\b/gi.test(location)) {\r\n    return 'JP';\r\n  } else if (/\\bchina\\b/gi.test(location) || /\\bshanghai\\b/gi.test(location) || /\\bbeijing\\b/gi.test(location)) { \r\n    return 'CN';\r\n  } else if (/\\bmyanmar\\b/gi.test(location) || /\\bRGN\\b/gi.test(location) || /\\bburma\\b/gi.test(location) || /\\bmdy\\b/gi.test(location) || /\\bmandalay\\b/gi.test(location)) {\r\n    return 'MM';\r\n  } else if (/\\bsingapore\\b/gi.test(location) || /\\bsingpore\\b/gi.test(location)) {\r\n    return 'SG';\r\n  } else if (/\\bthailand\\b/gi.test(location) || /\\bbangkok\\b/gi.test(location)) {  \r\n    return 'TH';\r\n  } else if (/\\bPK\\b/gi.test(location) || /\\bPAK\\b/gi.test(location) || /\\bpakistan\\b/gi.test(location) || /\\blahore\\b/gi.test(location) || /\\bkarachi\\b/gi.test(location) || /\\bislamabad\\b/gi.test(location) || /\\bmultan\\b/gi.test(location) || /\\brawalpindi\\b/gi.test(location) || /\\bsindh\\b/gi.test(location) || /\\bqueta\\b/gi.test(location) || /\\bquetta\\b/gi.test(location) || /\\bkhyber\\b/gi.test(location) || /\\bpeshawar\\b/gi.test(location) || /\\bpeshavar\\b/gi.test(location) || /\\bgilgit\\b/gi.test(location) || /\\bbaltistan\\b/gi.test(location) || /\\bbalochistan\\b/gi.test(location) || /\\bbaloochistan\\b/gi.test(location) || /\\bbaluchistan\\b/gi.test(location)) {\r\n    return 'PK';\r\n  } else if (/\\bIN\\b/g.test(location) || /\\bIND\\b/gi.test(location) || /\\bindia\\b/gi.test(location) || /\\bindian\\b/gi.test(location) || /\\bbharat\\b/gi.test(location) || /\\bhind\\b/gi.test(location) || /\\bhindustan\\b/gi.test(location) || /\\bhindusthan\\b/gi.test(location) || /\\baryavarta\\b/gi.test(location) || /\\bdelhi\\b/gi.test(location) || /\\bmumbai\\b/gi.test(location) || /\\bbombay\\b/gi.test(location) || /\\bchennai\\b/gi.test(location) || /\\bkolkata\\b/gi.test(location) || /\\bbanglore\\b/gi.test(location) || /\\bbangalore\\b/gi.test(location) || /\\bbengaluru\\b/gi.test(location) || /\\bdl\\b/gi.test(location) || /\\bblr\\b/gi.test(location) || /\\bbhopal\\b/gi.test(location) || /\\bvishakhapatnam\\b/gi.test(location) || /\\bvizag\\b/gi.test(location) || /\\buttar pradesh\\b/gi.test(location) || /\\bmadhya pradesh\\b/gi.test(location) || /\\bmadhaya pradesh\\b/gi.test(location) || /\\buttarpradesh\\b/gi.test(location) || /\\bmadhyapradesh\\b/gi.test(location) || /\\bmadhayapradesh\\b/gi.test(location) || /\\bup\\b/gi.test(location) || /\\bmp\\b/gi.test(location) || /\\bpunjab\\b/gi.test(location) || /\\bassam\\b/gi.test(location) || /\\bhyderabad\\b/gi.test(location) || /\\bgujarat\\b/gi.test(location) || /\\bahmedabad\\b/gi.test(location) || /\\bjammu\\b/gi.test(location) || /\\bkashmir\\b/gi.test(location) || /\\bpalakad\\b/gi.test(location) || /\\bpalakkad\\b/gi.test(location) || /\\bprayagraj\\b/gi.test(location) || /\\bvaranasi\\b/gi.test(location) || /\\bnowshera\\b/gi.test(location) || /\\bharyana\\b/gi.test(location) || /\\bsecunderabad\\b/gi.test(location) || /\\bbhagyanagar\\b/gi.test(location) || /\\bkarnavati\\b/gi.test(location) || /\\blucknow\\b/gi.test(location) || /\\bdilli\\b/gi.test(location) || /\\ballahabad\\b/gi.test(location) || /\\bmysore\\b/gi.test(location) || /\\bkochi\\b/gi.test(location) || /\\bcochin\\b/gi.test(location) || /\\bmadras\\b/gi.test(location) || /\\bpradesh\\b/gi.test(location) || /\\bnagar\\b/gi.test(location) || /\\bbihar\\b/gi.test(location) || /\\btelangana\\b/gi.test(location) || /\\bghaziabad\\b/gi.test(location) || /\\bkanpur\\b/gi.test(location) || /\\bagra\\b/gi.test(location) || /\\bguwahati\\b/gi.test(location)) { \r\n    return 'IN';\r\n  } else if (/\\bBD\\b/gi.test(location) || /\\bBND\\b/gi.test(location) || /\\bbangladesh\\b/gi.test(location) || /\\bdhaka\\b/gi.test(location)) {\r\n    return 'BD';\r\n  } else if (/\\bKSA\\b/gi.test(location)|| /\\bsaudi\\b/gi.test(location) || /\\barabia\\b/gi.test(location) || /\\bsaudi arabia\\b/gi.test(location) || /\\bsaud\\b/gi.test(location) || /\\bmecca\\b/gi.test(location) || /\\bmadina\\b/gi.test(location)) {\r\n    return 'SA';\r\n  }\r\n\r\n  countryNames.forEach((countryName, index) => {\r\n    if (location.toLowerCase().includes(countryName.toLowerCase())) {\r\n      return countryCodes[index];\r\n    }\r\n  });\r\n}\r\n\r\nexport const countryCodeExists = codeExists;\r\nexport const isJapanese = hasJapanese;\r\nexport const isKorean = hasKorean;\r\nexport const isChinese = hasChinese;\r\nexport const isIndian = hasIndian;\r\nexport const isSinhala = hasSinhala;\r\nexport const isBurmese = hasBurmese;\r\nexport const isKhmer = hasKhmer;\r\nexport const isThai = hasThai;\r\nexport const isLao = hasLao;\r\nexport const isArmeninan = hasArmeninan;\r\nexport const isGeorgian = hasGeorgian;\r\nexport const isMongolian = hasMongolian;\r\nexport const isGreek = hasGreek;\r\nexport const isHebrew = hasHebrew;\r\nexport const isEnglish = hasEnglish;\r\nexport const getCCFromLang = getCountryCodeFromLang;\r\nexport const getCCBasic = checkCountriesMan;\r\nexport const countryAbbrCount = countryCodeCount;","import React, { Component, createRef } from \"react\";\r\nimport \"./SearchPageSVG.css\";\r\n\r\nclass SearchPageSVG extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.refers = {\r\n      searchSVG: createRef(),\r\n    };\r\n\r\n    this.hideSvg = this.hideSvg.bind(this);\r\n  }\r\n\r\n  hideSvg() {\r\n    let varHide = this.refers.searchSVG;\r\n    varHide.current.style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <svg\r\n        className=\"searchSVG\"\r\n        width=\"911\"\r\n        height=\"691\"\r\n        viewBox=\"0 0 1201 723\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        ref={this.refers.searchSVG}\r\n      >\r\n        <g id=\"VectorartSearch\">\r\n          <g id=\"undraw_Personal_goals_re_iow7 (1) 1\" clipPath=\"url(#clip0)\">\r\n            <path\r\n              id=\"Vector\"\r\n              d=\"M821.769 466.761C820.826 468.521 819.841 470.25 818.826 471.97C779.869 537.807 689.246 578.696 536.413 557.055C449.636 544.183 412.68 591.397 376.895 639.756C376.283 640.591 375.672 641.426 375.05 642.26C337.575 692.973 300.474 743.827 207.705 726.923C109.359 711.839 48.6641 634.376 39.2721 551.675C39.1577 550.669 39.0544 549.654 38.9608 548.648C33.6844 495.029 49.9908 439.509 91.591 397.595C116.719 372.284 152.421 358.839 189.274 359.261C200.369 359.461 211.461 358.664 222.405 356.878C224.82 356.465 227.163 356.013 229.443 355.5C276.393 345.092 298.028 314.149 311.296 276.389C311.608 275.494 311.919 274.598 312.219 273.693C342.686 183.641 328.598 57.2455 494.233 75.8393C642.451 86.4384 751.226 166.163 804.582 258.147C805.111 259.072 805.639 259.997 806.158 260.922C820.823 286.445 831.287 314.033 837.174 342.689C837.506 344.297 837.806 345.906 838.086 347.515C845.633 390.234 840.688 431.756 821.769 466.761Z\"\r\n              fill=\"#F2F2F2\"\r\n            />\r\n            <path\r\n              id=\"Vector_2\"\r\n              d=\"M806.388 253.69C795.754 265.95 783.772 277.048 770.656 286.785C719.56 324.797 654.842 345.412 590.996 349.736C558.184 351.974 525.211 349.801 493.012 343.28C460.254 336.623 429.01 324.898 398.75 311.201C369.32 297.877 340.761 282.853 311.527 269.157C311.839 268.262 312.149 267.367 312.45 266.462C344.327 281.345 375.551 297.746 407.8 311.925C438.184 325.29 469.636 336.191 502.528 342.023C535.347 347.803 568.841 349.076 602.025 345.804C665.696 339.59 730.465 316.803 779.415 276.035C788.606 268.382 797.103 259.977 804.813 250.915C805.342 251.84 805.87 252.765 806.388 253.69Z\"\r\n              fill=\"white\"\r\n            />\r\n            <g id=\"PieID\">\r\n              <path\r\n                id=\"Pie3ID\"\r\n                d=\"M585.168 46.946C585.094 46.946 585.02 46.9483 584.945 46.9529C506.377 51.7279 444.832 115.346 444.832 191.786C444.832 268.227 506.377 331.845 584.945 336.619C585.415 336.649 585.886 336.585 586.328 336.431C586.771 336.277 587.176 336.036 587.518 335.722C587.859 335.414 588.131 335.041 588.316 334.626C588.501 334.211 588.596 333.763 588.594 333.311V50.2607C588.592 49.3807 588.23 48.5375 587.588 47.9161C586.945 47.2946 586.075 46.9458 585.168 46.946Z\"\r\n                fill=\"#00BFA6\"\r\n              />\r\n              <path\r\n                id=\"Pie2ID\"\r\n                d=\"M705.295 288.505C704.13 288.504 703.013 288.056 702.188 287.258L600.6 188.71C600.191 188.316 599.867 187.847 599.647 187.331C599.426 186.815 599.313 186.261 599.315 185.702V50.2607C599.313 49.6796 599.434 49.1042 599.672 48.5708C599.91 48.0375 600.26 47.5577 600.698 47.1616C601.138 46.7606 601.657 46.4514 602.225 46.2532C602.793 46.055 603.397 45.972 603.999 46.0093C683.079 50.8151 745.026 114.848 745.026 191.786C745.029 226.734 732.113 260.525 708.624 287.023C708.229 287.467 707.744 287.828 707.199 288.082C706.655 288.337 706.062 288.48 705.458 288.502C705.403 288.504 705.349 288.505 705.295 288.505Z\"\r\n                fill=\"#3F3D56\"\r\n              />\r\n              <path\r\n                id=\"Pie1ID\"\r\n                d=\"M603.719 337.571C602.598 337.571 601.518 337.156 600.7 336.413C600.261 336.016 599.911 335.536 599.673 335.002C599.434 334.468 599.313 333.892 599.315 333.31V211.107C599.315 210.266 599.572 209.443 600.054 208.743C600.536 208.044 601.221 207.499 602.022 207.177C602.824 206.855 603.706 206.77 604.556 206.934C605.407 207.098 606.189 207.503 606.802 208.098L695.45 294.093C695.871 294.502 696.202 294.99 696.423 295.527C696.644 296.064 696.749 296.638 696.734 297.216C696.719 297.794 696.582 298.363 696.333 298.888C696.084 299.413 695.728 299.884 695.285 300.271C670.047 322.313 637.882 335.452 603.991 337.563C603.901 337.569 603.809 337.571 603.719 337.571Z\"\r\n                fill=\"#575A89\"\r\n              />\r\n            </g>\r\n            <path\r\n              id=\"Vector_3\"\r\n              d=\"M838.317 340.284C824.094 364.75 804.015 386.331 781.022 403.436C729.926 441.448 665.208 462.063 601.362 466.387C568.55 468.625 535.577 466.452 503.379 459.931C470.621 453.274 439.376 441.549 409.117 427.852C378.308 413.904 348.443 398.086 317.768 383.877C287.125 369.678 255.632 357.57 222.635 349.646C225.051 349.234 227.394 348.781 229.674 348.268C231.831 348.811 233.98 349.374 236.122 349.958C300.643 367.455 357.586 401.938 418.167 428.576C448.551 441.941 480.002 452.842 512.895 458.674C545.714 464.454 579.207 465.727 612.391 462.455C676.062 456.241 740.832 433.454 789.781 392.686C809.157 376.62 825.302 357.218 837.405 335.457C837.737 337.066 838.037 338.675 838.317 340.284Z\"\r\n              fill=\"white\"\r\n            />\r\n            <path\r\n              id=\"Vector_4\"\r\n              d=\"M197.767 555.103C261.333 572.339 317.54 606.067 377.126 632.525C376.514 633.359 375.903 634.194 375.281 635.029C373.767 634.355 372.264 633.681 370.761 632.997C339.952 619.049 310.087 603.231 279.412 589.022C248.116 574.521 215.939 562.202 182.176 554.288C135.505 543.383 87.2946 540.056 39.503 544.443C39.3886 543.437 39.2853 542.422 39.1917 541.416C92.468 536.538 146.215 541.176 197.767 555.103Z\"\r\n              fill=\"white\"\r\n            />\r\n            <path\r\n              id=\"Vector_5\"\r\n              d=\"M768.476 120.708C765.819 120.916 763.158 120.355 760.83 119.095C758.502 117.836 756.612 115.936 755.397 113.634C754.183 111.332 753.699 108.733 754.008 106.165C754.316 103.597 755.402 101.175 757.13 99.2057C758.857 97.2365 761.147 95.8084 763.711 95.102C766.275 94.3956 768.998 94.4426 771.534 95.237C774.071 96.0315 776.307 97.5377 777.961 99.5653C779.615 101.593 780.612 104.051 780.826 106.628C781.113 110.084 779.973 113.509 777.657 116.149C775.341 118.79 772.038 120.43 768.476 120.708V120.708ZM768.309 118.704C770.557 118.528 772.701 117.71 774.469 116.352C776.238 114.994 777.552 113.158 778.245 111.076C778.938 108.994 778.979 106.76 778.363 104.655C777.746 102.551 776.501 100.671 774.783 99.2529C773.065 97.8351 770.953 96.9433 768.713 96.6901C766.473 96.437 764.205 96.8339 762.198 97.8308C760.19 98.8276 758.532 100.38 757.434 102.29C756.336 104.201 755.846 106.385 756.027 108.566C756.147 110.014 756.56 111.425 757.243 112.718C757.925 114.011 758.863 115.161 760.004 116.102C761.144 117.044 762.465 117.758 763.89 118.204C765.315 118.651 766.816 118.82 768.309 118.704V118.704Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <path\r\n              id=\"Vector_6\"\r\n              d=\"M814.88 87.1643C819.46 87.1643 823.173 83.5624 823.173 79.1194C823.173 74.6763 819.46 71.0745 814.88 71.0745C810.3 71.0745 806.587 74.6763 806.587 79.1194C806.587 83.5624 810.3 87.1643 814.88 87.1643Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <path\r\n              id=\"Vector_7\"\r\n              d=\"M855.643 58.0703C858.049 58.0703 860 56.1783 860 53.8444C860 51.5105 858.049 49.6185 855.643 49.6185C853.237 49.6185 851.287 51.5105 851.287 53.8444C851.287 56.1783 853.237 58.0703 855.643 58.0703Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <path\r\n              id=\"Vector_8\"\r\n              d=\"M705.154 378.025C703.684 380.182 701.589 381.868 699.131 382.87C696.674 383.871 693.966 384.144 691.349 383.652C688.732 383.161 686.325 381.928 684.43 380.109C682.536 378.29 681.24 375.967 680.707 373.434C680.173 370.901 680.426 368.271 681.433 365.877C682.441 363.483 684.157 361.433 686.366 359.985C688.574 358.538 691.176 357.758 693.841 357.745C696.506 357.732 699.116 358.485 701.34 359.911V359.911C704.318 361.825 706.393 364.807 707.108 368.203C707.823 371.598 707.12 375.131 705.154 378.025V378.025ZM684.396 364.72C683.153 366.545 682.496 368.687 682.507 370.875C682.519 373.062 683.199 375.198 684.462 377.011C685.724 378.823 687.513 380.232 689.601 381.059C691.689 381.886 693.983 382.093 696.192 381.656C698.402 381.218 700.428 380.154 702.015 378.599C703.601 377.044 704.677 375.068 705.105 372.92C705.534 370.772 705.296 368.549 704.423 366.532C703.549 364.515 702.078 362.795 700.197 361.589V361.589C697.672 359.975 694.591 359.398 691.629 359.985C688.667 360.572 686.066 362.275 684.396 364.72V364.72Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <path\r\n              id=\"Vector_9\"\r\n              d=\"M721.298 426.103C725.878 426.103 729.591 422.501 729.591 418.058C729.591 413.615 725.878 410.013 721.298 410.013C716.718 410.013 713.005 413.615 713.005 418.058C713.005 422.501 716.718 426.103 721.298 426.103Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <path\r\n              id=\"Vector_10\"\r\n              d=\"M744.431 463.503C746.837 463.503 748.787 461.611 748.787 459.277C748.787 456.943 746.837 455.051 744.431 455.051C742.025 455.051 740.075 456.943 740.075 459.277C740.075 461.611 742.025 463.503 744.431 463.503Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <path\r\n              id=\"Vector_11\"\r\n              d=\"M370.53 158.462C369.343 156.147 368.892 153.542 369.232 150.978C369.571 148.413 370.688 146.004 372.439 144.055C374.19 142.106 376.498 140.704 379.07 140.027C381.643 139.351 384.364 139.429 386.891 140.253C389.417 141.076 391.635 142.608 393.264 144.655C394.893 146.701 395.86 149.17 396.043 151.75C396.225 154.329 395.615 156.903 394.289 159.147C392.964 161.39 390.982 163.201 388.595 164.352V164.352C385.394 165.891 381.694 166.135 378.307 165.031C374.92 163.927 372.123 161.564 370.53 158.462V158.462ZM392.81 147.722C391.806 145.763 390.226 144.136 388.269 143.048C386.313 141.96 384.067 141.459 381.817 141.609C379.567 141.759 377.414 142.552 375.629 143.889C373.844 145.226 372.507 147.047 371.789 149.121C371.07 151.195 371.002 153.429 371.592 155.54C372.183 157.652 373.405 159.546 375.105 160.983C376.806 162.421 378.907 163.337 381.144 163.616C383.381 163.895 385.653 163.524 387.672 162.551C390.378 161.242 392.439 158.947 393.402 156.167C394.365 153.387 394.152 150.35 392.81 147.722Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <path\r\n              id=\"Vector_12\"\r\n              d=\"M326.731 159.964C331.312 159.964 335.024 156.362 335.024 151.919C335.024 147.476 331.312 143.874 326.731 143.874C322.151 143.874 318.438 147.476 318.438 151.919C318.438 156.362 322.151 159.964 326.731 159.964Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <path\r\n              id=\"Vector_13\"\r\n              d=\"M278.37 154.871C280.776 154.871 282.727 152.979 282.727 150.645C282.727 148.312 280.776 146.42 278.37 146.42C275.964 146.42 274.014 148.312 274.014 150.645C274.014 152.979 275.964 154.871 278.37 154.871Z\"\r\n              fill=\"#CCCCCC\"\r\n            />\r\n            <g id=\"TweetID\">\r\n              <path\r\n                id=\"Vector_14\"\r\n                d=\"M496.189 492.59L337.211 492.59C335.955 492.588 334.751 491.941 333.862 490.791C332.974 489.641 332.474 488.082 332.473 486.456L332.473 376.53C332.474 374.904 332.974 373.345 333.862 372.195C334.751 371.045 335.955 370.398 337.211 370.396L496.189 370.396C497.446 370.398 498.65 371.045 499.538 372.195C500.426 373.345 500.926 374.904 500.928 376.53L500.928 486.456C500.926 488.082 500.426 489.641 499.538 490.791C498.65 491.941 497.446 492.588 496.189 492.59V492.59Z\"\r\n                fill=\"#3F3D56\"\r\n              />\r\n              <path\r\n                id=\"Vector_15\"\r\n                d=\"M364.364 447.319C374.018 447.319 381.845 437.187 381.845 424.688C381.845 412.188 374.018 402.056 364.364 402.056C354.709 402.056 346.883 412.188 346.883 424.688C346.883 437.187 354.709 447.319 364.364 447.319Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_16\"\r\n                d=\"M476.928 404.423L405.555 404.423C404.846 404.423 404.166 404.058 403.665 403.409C403.163 402.76 402.882 401.88 402.882 400.962C402.882 400.044 403.163 399.164 403.665 398.515C404.166 397.866 404.846 397.502 405.555 397.502L476.928 397.502C477.637 397.502 478.316 397.866 478.818 398.515C479.319 399.164 479.601 400.044 479.601 400.962C479.601 401.88 479.319 402.76 478.818 403.409C478.316 404.058 477.637 404.423 476.928 404.423V404.423Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_17\"\r\n                d=\"M439.563 420.242L405.555 420.242C404.846 420.242 404.166 419.877 403.665 419.228C403.163 418.579 402.882 417.699 402.882 416.781C402.882 415.864 403.163 414.983 403.665 414.334C404.166 413.685 404.846 413.321 405.555 413.321L439.563 413.321C440.272 413.321 440.952 413.685 441.453 414.334C441.955 414.983 442.236 415.864 442.236 416.781C442.236 417.699 441.955 418.579 441.453 419.228C440.952 419.877 440.272 420.242 439.563 420.242V420.242Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_18\"\r\n                d=\"M463.516 436.054L405.555 436.054C404.846 436.054 404.166 435.689 403.665 435.04C403.163 434.391 402.882 433.511 402.882 432.593C402.882 431.676 403.163 430.796 403.665 430.147C404.166 429.498 404.846 429.133 405.555 429.133L463.516 429.133C464.225 429.133 464.905 429.498 465.406 430.147C465.907 430.796 466.189 431.676 466.189 432.593C466.189 433.511 465.907 434.391 465.406 435.04C464.905 435.689 464.225 436.054 463.516 436.054V436.054Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_19\"\r\n                d=\"M476.928 451.866L405.555 451.866C404.846 451.866 404.166 451.501 403.665 450.852C403.163 450.203 402.882 449.323 402.882 448.406C402.882 447.488 403.163 446.608 403.665 445.959C404.166 445.31 404.846 444.945 405.555 444.945L476.928 444.945C477.637 444.945 478.316 445.31 478.818 445.959C479.319 446.608 479.601 447.488 479.601 448.406C479.601 449.323 479.319 450.203 478.818 450.852C478.316 451.501 477.637 451.866 476.928 451.866V451.866Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_20\"\r\n                d=\"M474.693 480.473L462.875 480.473C462.23 480.474 461.591 480.311 460.995 479.992C460.398 479.674 459.856 479.206 459.399 478.616C458.943 478.026 458.581 477.325 458.333 476.553C458.086 475.781 457.959 474.954 457.959 474.119C457.959 473.284 458.086 472.456 458.333 471.685C458.581 470.913 458.943 470.212 459.399 469.622C459.856 469.032 460.398 468.564 460.995 468.245C461.591 467.927 462.23 467.763 462.875 467.765L474.693 467.765C475.995 467.765 477.243 468.434 478.163 469.626C479.084 470.817 479.601 472.434 479.601 474.119C479.601 475.804 479.084 477.42 478.163 478.612C477.243 479.804 475.995 480.473 474.693 480.473V480.473Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_21\"\r\n                d=\"M259.737 502.828L148.734 502.828C147.857 502.827 147.016 502.375 146.396 501.572C145.776 500.769 145.427 499.681 145.426 498.545L145.426 421.792C145.427 420.657 145.776 419.568 146.396 418.765C147.016 417.962 147.857 417.51 148.734 417.509L259.737 417.509C260.614 417.51 261.455 417.962 262.075 418.765C262.695 419.568 263.044 420.657 263.045 421.792L263.045 498.545C263.044 499.681 262.695 500.769 262.075 501.572C261.455 502.375 260.614 502.827 259.737 502.828V502.828Z\"\r\n                fill=\"#575A89\"\r\n              />\r\n              <path\r\n                id=\"Vector_22\"\r\n                d=\"M167.692 471.219C174.433 471.219 179.898 464.144 179.898 455.417C179.898 446.69 174.433 439.615 167.692 439.615C160.951 439.615 155.486 446.69 155.486 455.417C155.486 464.144 160.951 471.219 167.692 471.219Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_23\"\r\n                d=\"M246.288 441.267L196.453 441.267C195.958 441.267 195.483 441.013 195.134 440.56C194.784 440.106 194.587 439.492 194.587 438.851C194.587 438.21 194.784 437.596 195.134 437.143C195.483 436.69 195.958 436.435 196.453 436.435L246.288 436.435C246.783 436.435 247.257 436.69 247.607 437.143C247.957 437.596 248.154 438.21 248.154 438.851C248.154 439.492 247.957 440.106 247.607 440.56C247.257 441.013 246.783 441.267 246.288 441.267V441.267Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_24\"\r\n                d=\"M220.199 452.313L196.453 452.313C195.959 452.311 195.485 452.056 195.136 451.603C194.786 451.15 194.59 450.537 194.59 449.897C194.59 449.257 194.786 448.643 195.136 448.19C195.485 447.737 195.959 447.482 196.453 447.48L220.199 447.48C220.693 447.482 221.167 447.737 221.516 448.19C221.865 448.643 222.061 449.257 222.061 449.897C222.061 450.537 221.865 451.15 221.516 451.603C221.167 452.056 220.693 452.311 220.199 452.313V452.313Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_25\"\r\n                d=\"M236.923 463.353L196.453 463.353C195.959 463.352 195.485 463.097 195.136 462.644C194.786 462.191 194.59 461.577 194.59 460.937C194.59 460.297 194.786 459.683 195.136 459.23C195.485 458.777 195.959 458.522 196.453 458.521L236.923 458.521C237.417 458.522 237.891 458.777 238.24 459.23C238.589 459.683 238.785 460.297 238.785 460.937C238.785 461.577 238.589 462.191 238.24 462.644C237.891 463.097 237.417 463.352 236.923 463.353V463.353Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_26\"\r\n                d=\"M246.287 474.393L196.453 474.393C195.959 474.392 195.485 474.137 195.136 473.684C194.786 473.231 194.59 472.617 194.59 471.977C194.59 471.337 194.786 470.723 195.136 470.27C195.485 469.818 195.959 469.562 196.453 469.561L246.287 469.561C246.533 469.561 246.776 469.623 247.003 469.744C247.229 469.865 247.436 470.043 247.609 470.267C247.783 470.492 247.921 470.758 248.015 471.052C248.109 471.345 248.157 471.66 248.157 471.977C248.157 472.295 248.109 472.61 248.015 472.903C247.921 473.196 247.783 473.463 247.609 473.687C247.436 473.912 247.229 474.09 247.003 474.211C246.776 474.332 246.533 474.394 246.287 474.393V474.393Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_27\"\r\n                d=\"M244.727 494.368L236.475 494.368C235.567 494.368 234.695 493.9 234.052 493.068C233.41 492.236 233.049 491.108 233.049 489.931C233.049 488.754 233.41 487.626 234.052 486.794C234.695 485.962 235.567 485.494 236.475 485.494L244.727 485.494C245.636 485.494 246.507 485.962 247.15 486.794C247.793 487.626 248.154 488.754 248.154 489.931C248.154 491.108 247.793 492.236 247.15 493.068C246.507 493.9 245.636 494.368 244.727 494.368Z\"\r\n                fill=\"white\"\r\n              />\r\n              <path\r\n                id=\"Vector_28\"\r\n                d=\"M449.618 621.68L242.047 621.68C240.407 621.678 238.834 620.833 237.674 619.332C236.515 617.83 235.862 615.794 235.86 613.671L235.86 470.146C235.862 468.023 236.515 465.987 237.674 464.485C238.834 462.984 240.407 462.139 242.047 462.137L449.618 462.137C451.258 462.139 452.83 462.984 453.99 464.485C455.15 465.987 455.802 468.023 455.804 470.146L455.804 613.671C455.802 615.794 455.15 617.83 453.99 619.332C452.83 620.833 451.258 621.678 449.618 621.68Z\"\r\n                fill=\"#4DD3C1\"\r\n              />\r\n              <path\r\n                id=\"Vector_29\"\r\n                d=\"M277.498 562.572C290.103 562.572 300.322 549.343 300.322 533.023C300.322 516.703 290.103 503.474 277.498 503.474C264.893 503.474 254.674 516.703 254.674 533.023C254.674 549.343 264.893 562.572 277.498 562.572Z\"\r\n                fill=\"white\"\r\n              />\r\n            </g>\r\n            <path\r\n              id=\"Vector_30\"\r\n              d=\"M530.674 322L530 322.236L544.705 395H630V394.083H545.241L530.674 322Z\"\r\n              fill=\"#3F3D56\"\r\n            />\r\n            <path\r\n              id=\"Vector_31\"\r\n              d=\"M649.822 395.332C649.274 394.52 649 393.331 649 391.766C649 390.216 649.274 389.035 649.822 388.223C650.104 387.815 650.455 387.494 650.849 387.283C651.243 387.072 651.67 386.977 652.097 387.005C652.528 386.976 652.958 387.071 653.357 387.282C653.755 387.493 654.111 387.814 654.398 388.223C654.951 389.035 655.228 390.216 655.228 391.766C655.228 393.332 654.952 394.52 654.398 395.332C654.111 395.74 653.755 396.062 653.357 396.273C652.958 396.483 652.528 396.578 652.097 396.549C651.67 396.577 651.243 396.482 650.849 396.271C650.455 396.06 650.104 395.739 649.822 395.332ZM653.083 394.07C653.33 393.344 653.437 392.555 653.395 391.766C653.435 390.987 653.325 390.208 653.074 389.495C652.981 389.271 652.84 389.085 652.667 388.959C652.494 388.832 652.296 388.771 652.097 388.782C651.901 388.773 651.707 388.835 651.538 388.961C651.37 389.088 651.233 389.273 651.145 389.495C650.901 390.21 650.794 390.989 650.834 391.766C650.793 392.551 650.9 393.337 651.145 394.059C651.233 394.281 651.369 394.467 651.538 394.593C651.707 394.72 651.901 394.782 652.097 394.772C652.297 394.787 652.496 394.728 652.671 394.604C652.846 394.479 652.989 394.294 653.083 394.07V394.07ZM651.976 402.846L659.104 387.224H661.024L653.879 402.846H651.976ZM658.594 401.782C658.045 400.97 657.771 399.775 657.772 398.195C657.772 396.645 658.046 395.467 658.594 394.662C658.894 394.28 659.252 393.976 659.645 393.769C660.038 393.562 660.46 393.456 660.886 393.456C661.312 393.456 661.733 393.562 662.127 393.769C662.52 393.976 662.877 394.28 663.178 394.662C663.726 395.467 664 396.652 664 398.217C664 399.782 663.726 400.971 663.178 401.782C662.879 402.168 662.522 402.474 662.128 402.683C661.735 402.892 661.313 403 660.886 403C660.459 403 660.037 402.892 659.643 402.683C659.25 402.474 658.893 402.168 658.594 401.782ZM661.854 400.51C662.1 399.787 662.207 399.002 662.166 398.217C662.207 397.438 662.097 396.659 661.846 395.946C661.749 395.73 661.609 395.549 661.44 395.424C661.27 395.299 661.077 395.233 660.881 395.233C660.685 395.233 660.493 395.299 660.323 395.424C660.154 395.549 660.013 395.73 659.917 395.946C659.672 396.661 659.566 397.439 659.605 398.217C659.565 399.002 659.671 399.787 659.917 400.51C660.014 400.726 660.155 400.906 660.325 401.032C660.496 401.157 660.689 401.223 660.886 401.223C661.082 401.223 661.275 401.157 661.446 401.032C661.616 400.906 661.757 400.726 661.854 400.51V400.51Z\"\r\n              fill=\"#3F3D56\"\r\n            />\r\n            <path\r\n              id=\"Vector_32\"\r\n              d=\"M637.769 402.232C636.187 402.232 634.64 401.763 633.325 400.884C632.009 400.005 630.984 398.755 630.378 397.293C629.773 395.831 629.614 394.223 629.923 392.671C630.232 391.119 630.994 389.694 632.112 388.575C633.231 387.456 634.657 386.694 636.209 386.386C637.76 386.077 639.369 386.235 640.831 386.841C642.293 387.446 643.542 388.472 644.421 389.787C645.3 391.103 645.769 392.65 645.769 394.232C645.767 396.353 644.923 398.386 643.423 399.886C641.924 401.386 639.89 402.229 637.769 402.232V402.232ZM637.769 386.994C636.338 386.994 634.938 387.418 633.748 388.214C632.558 389.009 631.63 390.139 631.082 391.462C630.534 392.785 630.391 394.24 630.67 395.644C630.95 397.048 631.639 398.338 632.651 399.35C633.663 400.362 634.953 401.052 636.357 401.331C637.761 401.61 639.217 401.467 640.539 400.919C641.862 400.371 642.992 399.443 643.788 398.253C644.583 397.063 645.007 395.663 645.007 394.232C645.005 392.313 644.242 390.473 642.885 389.116C641.528 387.759 639.688 386.996 637.769 386.994V386.994Z\"\r\n              fill=\"#3F3D56\"\r\n            />\r\n            <path\r\n              id=\"Vector_33\"\r\n              d=\"M637.5 399C639.985 399 642 396.985 642 394.5C642 392.015 639.985 390 637.5 390C635.015 390 633 392.015 633 394.5C633 396.985 635.015 399 637.5 399Z\"\r\n              fill=\"#00BFA6\"\r\n            />\r\n          </g>\r\n          <path\r\n            id=\"Vector_34\"\r\n            d=\"M972.796 334.142C973.638 333.859 974.499 333.651 975.369 333.52L1010.14 253.65L999.522 235.66L1021.44 214L1049 252.125L992.876 344.473C994.257 347.965 994.665 351.85 994.045 355.611C993.425 359.372 991.807 362.83 989.407 365.526C987.006 368.222 983.936 370.028 980.606 370.704C977.275 371.379 973.842 370.893 970.762 369.308C967.682 367.724 965.102 365.117 963.364 361.834C961.627 358.551 960.815 354.748 961.036 350.931C961.256 347.113 962.5 343.462 964.601 340.463C966.702 337.465 969.56 335.26 972.796 334.142V334.142Z\"\r\n            fill=\"#FFB9B9\"\r\n          />\r\n          <path\r\n            id=\"Vector_35\"\r\n            d=\"M1033.03 223.657C1032.55 224.21 1032 224.685 1031.39 225.067L995.383 247.931C994.518 248.481 993.558 248.828 992.563 248.95C991.569 249.073 990.563 248.968 989.607 248.642C988.652 248.317 987.769 247.778 987.013 247.059C986.258 246.34 985.647 245.458 985.219 244.467L967.705 203.94C966.96 202.234 966.799 200.292 967.253 198.468C967.706 196.644 968.744 195.059 970.176 194.003L992.498 177.371C993.892 176.333 995.573 175.861 997.251 176.036C998.929 176.21 1000.5 177.021 1001.69 178.328L1032.89 212.622C1034.22 214.081 1034.97 216.049 1035 218.109C1035.02 220.169 1034.32 222.158 1033.03 223.657H1033.03Z\"\r\n            fill=\"#D0CDE1\"\r\n          />\r\n          <path\r\n            id=\"Vector_36\"\r\n            d=\"M1083 684.267L1063.99 690L1035 611.462L1063.05 603L1083 684.267Z\"\r\n            fill=\"#FFB9B9\"\r\n          />\r\n          <path\r\n            id=\"Vector_37\"\r\n            d=\"M1048.51 688.285L1084.73 677.065L1090.93 703.03L1031.91 721.315C1031.09 717.905 1030.88 714.346 1031.27 710.841C1031.66 707.336 1032.66 703.953 1034.2 700.886C1035.74 697.819 1037.8 695.127 1040.25 692.965C1042.71 690.803 1045.51 689.213 1048.51 688.285V688.285Z\"\r\n            fill=\"#2F2E41\"\r\n          />\r\n          <path\r\n            id=\"Vector_38\"\r\n            d=\"M921.997 700L902.349 699.998L893 616L922 616.002L921.997 700Z\"\r\n            fill=\"#FFB9B9\"\r\n          />\r\n          <path\r\n            id=\"Vector_39\"\r\n            d=\"M887.568 693H925V722H864C864 718.192 864.61 714.421 865.794 710.902C866.978 707.384 868.714 704.187 870.903 701.494C873.091 698.801 875.69 696.665 878.549 695.207C881.408 693.75 884.473 693 887.568 693Z\"\r\n            fill=\"#2F2E41\"\r\n          />\r\n          <path\r\n            id=\"Vector_40\"\r\n            d=\"M920.426 640H893.855C892.039 639.996 890.292 639.205 888.968 637.786C887.644 636.367 886.842 634.427 886.725 632.359C878.808 488.753 883.439 385.741 901.3 308.177C901.378 307.838 901.475 307.504 901.589 307.178L903.012 303.119C903.538 301.605 904.452 300.307 905.634 299.394C906.816 298.48 908.212 297.995 909.639 298H964.28C965.309 297.999 966.327 298.253 967.262 298.744C968.198 299.235 969.029 299.951 969.698 300.843L977.12 310.723C977.265 310.916 977.4 311.112 977.531 311.319C1011 364.565 1040.99 468.664 1075.72 608.584C1076.24 610.618 1076.03 612.799 1075.16 614.664C1074.28 616.529 1072.8 617.929 1071.03 618.567L1042.48 628.993C1040.84 629.582 1039.07 629.48 1037.49 628.705C1035.91 627.931 1034.62 626.535 1033.87 624.773L959.77 449.417C959.252 448.191 958.401 447.189 957.345 446.558C956.288 445.927 955.082 445.7 953.904 445.913C952.726 446.125 951.639 446.765 950.804 447.737C949.97 448.709 949.432 449.961 949.27 451.31L927.498 632.96C927.259 634.908 926.412 636.692 925.113 637.985C923.814 639.278 922.15 639.993 920.426 640V640Z\"\r\n            fill=\"#2F2E41\"\r\n          />\r\n          <path\r\n            id=\"Vector_41\"\r\n            d=\"M973.959 313C973.886 313 973.813 312.998 973.739 312.996L908.524 310.585C906.847 310.53 905.244 309.771 904.005 308.446C902.767 307.121 901.977 305.319 901.779 303.368C893.511 224.996 916.184 204 926.316 198.612C927.163 198.164 927.896 197.468 928.446 196.591C928.995 195.714 929.342 194.686 929.452 193.605L930.328 185.391C930.478 183.94 930.956 182.563 931.714 181.402C947.599 157.301 969.29 149.584 980.807 147.129C981.741 146.933 982.699 146.961 983.623 147.211C984.548 147.462 985.419 147.93 986.185 148.587C986.95 149.244 987.594 150.076 988.076 151.034C988.558 151.991 988.869 153.053 988.99 154.155L990.303 165.951C990.437 167.076 990.82 168.14 991.415 169.038C1024.54 219.761 987.637 294.654 979.901 309.152C979.269 310.329 978.393 311.3 977.354 311.972C976.315 312.645 975.147 312.999 973.959 313Z\"\r\n            fill=\"#D0CDE1\"\r\n          />\r\n          <g id=\"HeadID\">\r\n            <path\r\n              id=\"Vector_42\"\r\n              d=\"M935.739 143.615C956.743 147.752 976.815 131.183 980.572 106.606C984.329 82.0291 970.348 58.7517 949.344 54.6143C928.34 50.4768 908.268 67.0462 904.511 91.6229C900.754 116.2 914.736 139.477 935.739 143.615Z\"\r\n              fill=\"#FFB9B9\"\r\n            />\r\n            <path\r\n              id=\"Vector_43\"\r\n              d=\"M1018.54 119.947C1012.09 104.487 1003.71 90.1843 993.662 77.4875C985.308 66.9368 975.666 57.4297 964.323 51.5561C952.979 45.6824 939.764 43.6987 927.915 48.1534C916.065 52.6079 902.855 63.4941 900.639 77.5235C899.928 82.0306 899.999 88.3317 904.002 88.3164L905.1 88.7082C914.801 88.3894 924.502 88.0705 934.203 87.7516C935.773 104.379 937.343 121.006 938.912 137.633C939.243 141.137 939.8 145.093 942.354 147.063C944.759 148.918 947.969 148.249 950.802 147.508C951.268 147.386 956.464 138.541 956.464 138.541C956.603 138.26 956.805 138.027 957.05 137.865C957.294 137.703 957.572 137.618 957.854 137.619C958.136 137.621 958.412 137.708 958.655 137.873C958.897 138.038 959.096 138.273 959.232 138.556L960.964 142.161C961.295 142.85 961.813 143.396 962.441 143.718C963.068 144.039 963.771 144.118 964.442 143.943C980.838 139.657 997.235 135.371 1013.63 131.085C1015.9 130.493 1018.46 129.641 1019.46 127.24C1020.41 124.939 1019.49 122.241 1018.54 119.947Z\"\r\n              fill=\"#2F2E41\"\r\n            />\r\n          </g>\r\n          <path\r\n            id=\"Vector_44\"\r\n            d=\"M1199.41 723H721.587C721.166 723 720.763 722.737 720.465 722.268C720.167 721.799 720 721.163 720 720.5C720 719.837 720.167 719.201 720.465 718.732C720.763 718.263 721.166 718 721.587 718H1199.41C1199.83 718 1200.24 718.263 1200.54 718.732C1200.83 719.201 1201 719.837 1201 720.5C1201 721.163 1200.83 721.799 1200.54 722.268C1200.24 722.737 1199.83 723 1199.41 723Z\"\r\n            fill=\"#3F3D56\"\r\n          />\r\n          <path\r\n            id=\"HandID\"\r\n            d=\"M751.245 229.236C752.41 231.466 754.089 233.384 756.164 234.857C758.239 236.33 760.659 237.32 763.254 237.759C765.849 238.197 768.556 238.073 771.184 237.395C773.812 236.717 776.297 235.502 778.465 233.835L934.221 259.7L935.201 221.387L781.923 207.894C779.044 204.773 774.994 202.869 770.54 202.542C766.086 202.214 761.537 203.486 757.756 206.117C753.974 208.748 751.223 212.554 750.023 216.815C748.823 221.076 749.258 225.495 751.245 229.236Z\"\r\n            fill=\"#FFB9B9\"\r\n          />\r\n          <path\r\n            id=\"Vector_45\"\r\n            d=\"M938.18 258.395C937.818 257.717 937.54 256.985 937.354 256.222L926.213 210.694C925.945 209.599 925.874 208.461 926.004 207.352C926.134 206.243 926.462 205.186 926.968 204.249C927.474 203.312 928.147 202.514 928.944 201.907C929.74 201.3 930.644 200.897 931.597 200.722L970.595 193.571C972.238 193.261 973.946 193.652 975.407 194.671C976.869 195.691 977.986 197.271 978.556 199.124L987.577 228.061C988.139 229.867 988.148 231.82 987.6 233.581C987.053 235.342 985.984 236.802 984.579 237.708L947.703 261.45C946.134 262.46 944.262 262.706 942.485 262.136C940.708 261.565 939.164 260.224 938.18 258.395L938.18 258.395Z\"\r\n            fill=\"#D0CDE1\"\r\n          />\r\n          <path\r\n            id=\"Vector_46\"\r\n            d=\"M761.822 8.33152C761.274 7.51979 761 6.33138 761 4.76627C761 3.2159 761.274 2.03468 761.822 1.22263C762.104 0.815238 762.455 0.49409 762.849 0.283219C763.243 0.0723484 763.67 -0.0227773 764.097 0.00496401C764.528 -0.0235514 764.958 0.0710566 765.357 0.281812C765.755 0.492568 766.111 0.814085 766.398 1.22263C766.951 2.03455 767.228 3.21577 767.228 4.76627C767.228 6.33157 766.952 7.51998 766.398 8.33152C766.111 8.74013 765.755 9.06171 765.357 9.27251C764.958 9.4833 764.528 9.57792 764.097 9.5494C763.67 9.57715 763.243 9.48201 762.849 9.2711C762.455 9.06019 762.104 8.73898 761.822 8.33152ZM765.083 7.07003C765.33 6.34449 765.437 5.55467 765.395 4.76627C765.435 3.98746 765.325 3.20785 765.074 2.49523C764.981 2.27099 764.84 2.08486 764.667 1.9586C764.494 1.83235 764.296 1.77117 764.097 1.78222C763.901 1.77252 763.707 1.83462 763.538 1.96108C763.37 2.08753 763.233 2.27299 763.145 2.49523C762.901 3.21012 762.794 3.98861 762.834 4.76627C762.793 5.55101 762.9 6.33679 763.145 7.05893C763.233 7.28127 763.369 7.46683 763.538 7.59333C763.707 7.71983 763.901 7.78192 764.097 7.77214C764.297 7.78668 764.496 7.72829 764.671 7.60388C764.846 7.47947 764.989 7.29424 765.083 7.07003V7.07003ZM763.976 15.8464L771.104 0.224381H773.024L765.879 15.8464H763.976ZM770.594 14.7823C770.045 13.9704 769.771 12.7746 769.772 11.1949C769.772 9.64469 770.046 8.46716 770.594 7.66232C770.894 7.27986 771.252 6.97641 771.645 6.76936C772.038 6.56231 772.46 6.45573 772.886 6.45573C773.312 6.45573 773.733 6.56231 774.127 6.76936C774.52 6.97641 774.877 7.27986 775.178 7.66232C775.726 8.46696 776 9.65182 776 11.2169C776 12.7822 775.726 13.9707 775.178 14.7823C774.879 15.168 774.522 15.4742 774.128 15.6833C773.735 15.8923 773.313 16 772.886 16C772.459 16 772.037 15.8923 771.643 15.6833C771.25 15.4742 770.893 15.168 770.594 14.7823ZM773.854 13.5097C774.1 12.7875 774.207 12.0017 774.166 11.2169C774.207 10.4382 774.097 9.65865 773.846 8.94601C773.749 8.72952 773.609 8.54943 773.44 8.42413C773.27 8.29883 773.077 8.2328 772.881 8.2328C772.685 8.2328 772.493 8.29883 772.323 8.42413C772.154 8.54943 772.013 8.72952 771.917 8.94601C771.672 9.66091 771.566 10.4393 771.605 11.2169C771.565 12.0016 771.671 12.7874 771.917 13.5097C772.014 13.7263 772.155 13.9063 772.325 14.0316C772.496 14.1568 772.689 14.2227 772.886 14.2227C773.082 14.2227 773.275 14.1568 773.446 14.0316C773.616 13.9063 773.757 13.7263 773.854 13.5097V13.5097Z\"\r\n            fill=\"#3F3D56\"\r\n          />\r\n          <path\r\n            id=\"Vector_47\"\r\n            d=\"M661.532 61L661 60.8289L672.617 8H740V8.66595H673.04L661.532 61Z\"\r\n            fill=\"#3F3D56\"\r\n          />\r\n          <path\r\n            id=\"Vector_48\"\r\n            d=\"M748 16C746.418 16 744.871 15.5308 743.555 14.6518C742.24 13.7727 741.214 12.5233 740.609 11.0615C740.003 9.59966 739.845 7.99113 740.154 6.43928C740.462 4.88743 741.224 3.46197 742.343 2.34315C743.462 1.22433 744.887 0.462404 746.439 0.153722C747.991 -0.15496 749.6 0.00346528 751.061 0.608966C752.523 1.21447 753.773 2.23984 754.652 3.55544C755.531 4.87103 756 6.41775 756 8C755.998 10.121 755.154 12.1544 753.654 13.6542C752.154 15.154 750.121 15.9976 748 16V16ZM748 0.761929C746.568 0.761925 745.169 1.18643 743.979 1.98176C742.788 2.77709 741.861 3.90752 741.313 5.23011C740.765 6.55269 740.622 8.00804 740.901 9.41209C741.18 10.8161 741.87 12.1058 742.882 13.1181C743.894 14.1304 745.184 14.8197 746.588 15.099C747.992 15.3783 749.447 15.235 750.77 14.6871C752.092 14.1393 753.223 13.2116 754.018 12.0213C754.814 10.831 755.238 9.43158 755.238 8.00002C755.236 6.08103 754.473 4.24126 753.116 2.88433C751.759 1.52739 749.919 0.764113 748 0.761929V0.761929Z\"\r\n            fill=\"#3F3D56\"\r\n          />\r\n          <path\r\n            id=\"Vector_49\"\r\n            d=\"M748.5 13C750.985 13 753 10.9853 753 8.49999C753 6.01471 750.985 4 748.5 4C746.015 4 744 6.01471 744 8.49999C744 10.9853 746.015 13 748.5 13Z\"\r\n            fill=\"#00BFA6\"\r\n          />\r\n        </g>\r\n        <defs>\r\n          <clipPath id=\"clip0\">\r\n            <rect\r\n              width=\"860\"\r\n              height=\"677\"\r\n              fill=\"white\"\r\n              transform=\"translate(0 46)\"\r\n            />\r\n          </clipPath>\r\n        </defs>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPageSVG;\r\n","import React, { Component } from 'react'\r\nimport { VectorMap } from \"react-jvectormap\";\r\nimport './Map.css'\r\n class Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n             mapData : props.mapData,\r\n        }\r\n        this.handleRegionTip = this.handleRegionTip.bind(this);\r\n     }\r\n    \r\n    handleRegionTip = (e, el, countryCode) => {\r\n        el.html(el.html()+' (Tweets : '+this.state.mapData[countryCode]+')');\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"mapSvg\">\r\n                    <VectorMap\r\n                        map={\"world_mill\"}\r\n                        backgroundColor=\"transparent\"\r\n                        zoomOnScroll={true}\r\n                        containerStyle={{\r\n                        width: \"100%\",\r\n                        height: \"57vh\",\r\n                        }}\r\n                        onRegionTipShow={this.handleRegionTip}\r\n                        containerClassName=\"map\"\r\n                        \r\n                        regionStyle={{\r\n                        initial: {\r\n                            fill: \"#e4e4e4\",\r\n                            \"fill-opacity\": 0.9,\r\n                            stroke: \"none\",\r\n                            \"stroke-width\": 0,\r\n                            \"stroke-opacity\": 0\r\n                        },\r\n                        hover: {\r\n                            \"fill-opacity\": 0.8,\r\n                            cursor: \"pointer\"\r\n                        },\r\n                        selected: {\r\n                            fill: \"#2938bc\" \r\n                        },\r\n                        selectedHover: {\r\n                        }\r\n                        }}\r\n                        regionsSelectable={false}\r\n                        series={{\r\n                        regions: [\r\n                            {\r\n                            values: this.state.mapData, \r\n                            scale: ['#C8EEFF', '#0071A4'],\r\n                            legend: {\r\n                                horizontal: true,\r\n                                cssClass: 'jvectormap-legend-bg',\r\n                                title: 'intensity of tweets',\r\n                              },\r\n                            normalizeFunction: \"polynomial\"\r\n                            }\r\n                        ]}\r\n                    }\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Map;","import React, { Component, createRef } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport \"./Search.css\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Tweet from '../../components/Tweet/Tweet';\r\nimport ChartPie from \"../../components/Chart/ChartPie\";\r\nimport ChartLine from \"../../components/Chart/ChartLine\"\r\nimport { MinPriorityQueue } from '@datastructures-js/priority-queue';\r\nimport ReactLoading from \"react-loading\";\r\nimport Loader from '../../components/Loader/Loader';\r\nimport {countryCodeExists, isEnglish, getCCFromLang, getCCBasic, countryAbbrCount} from './country_codes';\r\nimport SearchPageSVG from \"../../components/SearchPageSVG/SearchPageSVG\";\r\nimport Map from '../../components/Map/Map'\r\n\r\nconst menus = [\r\n  { text: \"Home\", link: \"home\" },\r\n  { text: \"Search\", link: \"search\" },\r\n  { text: \"Team\", link: \"team\" },\r\n];\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //pie chart data \r\n      chartData: {\r\n        labels: [\"Positive\", \"Neutral\", \"Negative\"],\r\n        datasets: [\r\n          {\r\n            label: \"Tweets\",\r\n            backgroundColor: [\r\n              \"rgba(0, 191, 166, 1)\",\r\n              \"rgba(87, 90, 137, 1)\",\r\n              \"rgba(63, 61, 86, 1)\",\r\n              \"rgba(75, 192, 192, 0.6)\",\r\n              \"rgba(153, 102, 255, 0.6)\",\r\n              \"rgba(255, 159, 64, 0.6)\",\r\n              \"rgba(255, 99, 132, 0.6)\",\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n      chartLineData :['50','20','80','45','90','150','60'], //line chart data\r\n      chartLineLabel :[],\r\n      tweetInfo: [], // All the Tweets information\r\n      loading: false,\r\n      positiveTweetsInfo: [],  //top 5 positive tweets\r\n      negativeTweetsInfo: [],  //top 5 Negative tweets\r\n      polarity: [],\r\n      positive: 0 ,\r\n      negative: 0,\r\n      neutral: 0,\r\n      tweetFetchCount : 0  \r\n    };\r\n\r\n    this.refers = {  //Refs of function\r\n      searchKey: createRef(),\r\n      tweetCount: createRef(),\r\n      searchSVG: createRef(),\r\n      getResult: createRef(),\r\n      showPositiveNegativeTweets: createRef(),\r\n    };\r\n\r\n    this.top5PositiveTweets = new MinPriorityQueue(); //priority queue for top 5 Positive Tweets\r\n    this.top5NegativeTweets = new MinPriorityQueue(); //priority queue for top 5 Negative Tweets\r\n    this.countryCodeCount = countryAbbrCount;  //Country code of the location of the tweet\r\n    this.tweetCount = 0;\r\n    this.currentDate = new Date();  // Date value for line chart\r\n    this.currentDateString = `${this.currentDate.getDate()}-${this.currentDate.getMonth() + 1}-${this.currentDate.getFullYear()}`;\r\n\r\n    this.handleSearch = this.handleSearch.bind(this); //bind these methods to the component\r\n    this.hideSvg= this.hideSvg.bind(this);\r\n    this.showResult= this.showResult.bind(this);\r\n    this.hideResult= this.hideResult.bind(this);\r\n    this.showPositiveNegativeTweets = this.showPositiveNegativeTweets.bind(this);\r\n    this.getResponse = this.getResponse.bind(this);\r\n    this.getChartData = this.getChartData.bind(this);\r\n    this.manageHeaps = this.manageHeaps.bind(this);\r\n    // this.getLineChartData = this.getLineChartData.bind(this);\r\n    this.currentWeek = this.currentWeek.bind(this);\r\n    this.getCountryCode = this.getCountryCode.bind(this);\r\n  }\r\n  //Calculate country code from loaction of tweet\r\n  async getCountryCode(location) { \r\n    let countryCode = await getCCBasic(location);\r\n    if (countryCode !== undefined) return countryCode;\r\n\r\n    if (isEnglish(location)) {\r\n      if (location.length === 2 && countryCodeExists(location)) {\r\n        return location;\r\n      }\r\n\r\n      try {\r\n        const API = `https://api.openweathermap.org/data/2.5/weather?q=${location.split(',')[0]}&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\r\n        const response = await fetch(API);\r\n        const data = await response.json();\r\n        if (data['sys'] !== undefined) {\r\n          countryCode = data['sys']['country'];\r\n          return countryCode;\r\n        }\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    }\r\n    \r\n    countryCode = getCCFromLang(location);\r\n    return countryCode;\r\n  }\r\n\r\n  // getLineChartData(date) {\r\n  //   date = new Date(date);\r\n  //   let dateString = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\r\n  //   let chartLineData = this.state.chartLineData;\r\n  //   if (dateString === this.currentDateString) {\r\n  //     dateString = `${date.getHours()}:${date.getMinutes()}`;\r\n  //     if (Object.hasOwnProperty(dateString)) {\r\n  //       chartLineData[dateString] += 1;\r\n  //     } else {\r\n  //       chartLineData[dateString] = 1;\r\n  //     }\r\n  //   } else {\r\n  //     dateString = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;\r\n  //     if (Object.hasOwnProperty(dateString)) {\r\n  //       chartLineData[dateString] += 1;\r\n  //     } else {\r\n  //       chartLineData[dateString] = 1;\r\n  //     }\r\n  //   }\r\n  //   this.setState({chartLineData: chartLineData});\r\n  // }\r\n\r\n  currentWeek() {\r\n    for (let i = 6; i >= 0; i--) {\r\n      let curr = new Date();\r\n      let first = curr.getDate() - i \r\n      let day = new Date(curr.setDate(first)).toISOString().slice(0, 10)\r\n      this.state.chartLineLabel.push(day)\r\n    }\r\n    // console.log(this.state.chartLineLabel);\r\n  }\r\n  //Display the result of search\r\n  handleSearch(event) {\r\n    this.currentWeek();\r\n    this.hideResult();\r\n    this.top5PositiveTweets.clear();\r\n    this.top5NegativeTweets.clear();\r\n    this.tweetCount = 0;\r\n    this.totalTweets = 0;\r\n    this.setState({\r\n      chartLineData: {},\r\n      tweetInfo: [],\r\n      positiveTweetsInfo: [],\r\n      negativeTweetsInfo: [],\r\n      polarity: [],\r\n      positive: 0,\r\n      negative: 0,\r\n      neutral: 0,\r\n    });\r\n    //alert boxes\r\n    if (!this.refers.searchKey.current.value.trim()) {\r\n      alert('Please Enter Keyword/Tag');\r\n      return;\r\n    }\r\n\r\n    if (isNaN(this.refers.tweetCount.current.value)) {\r\n      alert('No of tweets can only be number');\r\n      return;\r\n    }\r\n\r\n    if (!this.refers.tweetCount.current.value) {\r\n      alert('Please Enter No of Tweets');\r\n      return;\r\n    }\r\n\r\n    this.totalTweets = parseInt(this.refers.tweetCount.current.value);\r\n    this.hideSvg(event);\r\n    this.setState({loading: true});\r\n    const data = {\r\n      header: {\r\n        type: \"GET\",\r\n      },\r\n      body: {\r\n        search_key: this.refers.searchKey.current.value,\r\n        tweet_count: parseInt(this.refers.tweetCount.current.value),\r\n      },\r\n    };\r\n\r\n    this.props.clientSocket.sendRequest(data);\r\n  }\r\n  // Get the data from backend\r\n  async getResponse(data) {\r\n    let tweetInfo = this.state.tweetInfo;\r\n    let countryCode;\r\n    this.tweetCount = data.body.tweet[\"id\"];\r\n    tweetInfo.push(data);\r\n    // this.getLineChartData(data.body.tweet['tweet_date']);\r\n\r\n    if (data.body.tweet['country_code'] === undefined) {\r\n      const location = data.body.tweet['location'].trim();\r\n      if (location !== '' && location !== undefined && location !== null) {\r\n        countryCode = await this.getCountryCode(location);\r\n      }\r\n    } else {\r\n      countryCode = data.body.tweet['country_code'];\r\n    }\r\n    \r\n    if (countryCode !== undefined && countryCode !== '' && this.countryCodeCount.hasOwnProperty(countryCode)) {\r\n      this.countryCodeCount[countryCode] += 1; \r\n    } else if (countryCode !== undefined && countryCode !== '') {\r\n      this.countryCodeCount[countryCode] = 1;\r\n    }\r\n    \r\n    this.manageHeaps({polarity: data.body.tweet['polarity'], polarityScore: data.body.tweet['polarity_score'], url: data.body.tweet['embed_url']});\r\n    this.getChartData(data.body['total_polarity'], tweetInfo);\r\n    this.setState({loading: false});\r\n    this.showResult();\r\n    this.showPositiveNegativeTweets();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.clientSocket.setSearchCallback(this.getResponse);\r\n  }\r\n  // manage priority queue\r\n  manageHeaps({polarity, polarityScore, url}) {\r\n    if (polarity === 'positive') {\r\n      this.top5PositiveTweets.enqueue(url, polarityScore);\r\n      if (this.top5PositiveTweets.size() > 5) {\r\n        this.top5PositiveTweets.dequeue();\r\n      }\r\n    } else if (polarity === 'negative') {\r\n      this.top5NegativeTweets.enqueue(url, polarityScore);\r\n      if (this.top5NegativeTweets.size() > 5) {\r\n        this.top5NegativeTweets.dequeue();\r\n      }\r\n    }\r\n  }\r\n  //data for pie chart\r\n  getChartData(polarity, tweetInfo) {\r\n    const chartData = this.state.chartData;\r\n    const sum = polarity.positive + polarity.neutral + polarity.negative;\r\n    \r\n    polarity = {\r\n      positive: parseFloat(polarity.positive * 1.0 / sum).toFixed(2)  * 100,\r\n      neutral: parseFloat(polarity.neutral * 1.0 / sum).toFixed(2)  * 100 ,\r\n      negative: parseFloat(polarity.negative * 1.0 / sum).toFixed(2)  * 100 ,\r\n    }\r\n    \r\n    this.setState({positive : polarity.positive});\r\n    this.setState({neutral : polarity.neutral});\r\n    this.setState({negative : polarity.negative});\r\n    chartData.datasets[0].data = [polarity.positive, polarity.neutral, polarity.negative];\r\n    this.setState({\r\n      chartData: chartData,\r\n      tweetInfo: tweetInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header menus={menus} />\r\n        <section>\r\n          <div className=\"row\">\r\n            <div className=\"column left\">\r\n              <div className=\"form-wrapper\">\r\n                <form className=\"form\">\r\n                  <Input\r\n                    placeholder=\"Enter Keyword/Tag to search about\"\r\n                    icon=\"fas fa-search\"\r\n                    ref={this.refers.searchKey}\r\n                  />\r\n                  <Input\r\n                    placeholder=\"Enter how many tweets to search\"\r\n                    icon=\"fas fa-hashtag\"\r\n                    ref={this.refers.tweetCount}\r\n                  />\r\n                </form>\r\n              </div>\r\n              <br></br>\r\n              <div className=\"sensorBtn\">\r\n                <Button text=\"Search\" onClick={this.handleSearch}></Button>\r\n              </div>\r\n            </div>\r\n                  \r\n            <div className=\"column right\">\r\n              { this.state.loading ? (\r\n                  <>\r\n                    <Loader/>\r\n                    <ReactLoading className=\"loading\" type={\"bars\"} color={\"#00BFA6\"} height={'8%'} width={'8%'} />\r\n                    <div className=\"tweetFetch\"><span className=\"tweetFetchCount\">Tweets Fetched {this.tweetCount}/{this.totalTweets}</span>\r\n                    </div>\r\n                   </>\r\n                  ) : (\r\n                    <>\r\n                    </>\r\n                )\r\n              }\r\n              <SearchPageSVG ref={this.refers.searchSVG} />\r\n                <div className=\"analysisResult\" ref={this.refers.getResult}>\r\n                  <div className=\"tweetFetch\">\r\n                    <span className=\"tweetFetchCount\">Tweets Fetched {this.tweetCount}/{this.totalTweets}\r\n                    </span>\r\n                    <span>\r\n                    {\r\n                      this.tweetCount !== this.totalTweets ? \r\n                      (\r\n                        <ReactLoading className=\"loading loadingCount\" type={\"cubes\"} color={\"#00BFA6\"} height={'5%'} width={'8%'} />\r\n                      ):\r\n                      (\r\n                        <>\r\n                        </>\r\n                      )\r\n                    }\r\n                    </span>\r\n                  </div>\r\n                    <div className=\"pieData\">\r\n                      <div className=\"pieChart\">\r\n                      <ChartPie \r\n                        chartData={this.state.chartData}\r\n                        location=\"This Week\"\r\n                        legendPosition=\"bottom\"\r\n                      />\r\n                      </div>\r\n                      <div className=\"piePercentage\">\r\n                          <p><span>\r\n                          <i className=\"fas fa-square positiveSquare\"></i>\r\n                            </span>Positive Tweets : {this.state.positive}%</p>\r\n                          <p><span>\r\n                          <i className=\"fas fa-square neutralSquare\"></i>\r\n                            </span>Neutral Tweets : {this.state.neutral}%</p>\r\n                          <p><span>\r\n                          <i className=\"fas fa-square negativeSquare\"></i>\r\n                            </span>Negative Tweets : {this.state.negative}%</p>\r\n                          {\r\n\r\n                              this.state.positive > this.state.neutral ?\r\n                              (\r\n                                this.state.positive > this.state.negative ?\r\n                                (\r\n                                  <p className=\"overallResult\">Over all Analysis : \r\n                                    <span className=\"overallResultPositive\"> Positive </span>\r\n                                  </p>\r\n                                )\r\n                                :\r\n                                (\r\n                                  <p className=\"overallResult\">Over all Analysis : \r\n                                    <span className=\"overallResultNegative\"> Negative </span>\r\n                                  </p>\r\n                                )\r\n                              )\r\n                              :\r\n                              (\r\n                                this.state.neutral > this.state.negative ?\r\n                                (\r\n                                  <p className=\"overallResult\">Over all Analysis : \r\n                                    <span className=\"overallResultNeutral\"> Neutral </span>\r\n                                  </p>\r\n                                )\r\n                                :\r\n                                (\r\n                                  <p className=\"overallResult\">Over all Analysis : \r\n                                    <span className=\"overallResultNegative\"> Negative </span>\r\n                                  </p>\r\n                                )\r\n                              )\r\n                          }\r\n                      </div>\r\n                        <div className=\"downloadreport\">\r\n                          <p>Download Analysis Report : \r\n                          <a className=\"reportlink\" href={`http://localhost:5000/sentiment_analysis.py`} download='abc.zip'> click here...</a></p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                  {/* <ChartBar\r\n                    chartData={this.state.chartData}\r\n                    location=\"This Week\"\r\n                    legendPosition=\"bottom\"\r\n                  /> */}\r\n                  <div className=\"chartLine\">\r\n                    <ChartLine chartLineData={this.state.chartLineData} chartLineLabel={this.state.chartLineLabel} />\r\n                  </div>\r\n                  \r\n                </div>      \r\n                  \r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"showPositiveNegativeTweets\" ref={this.refers.showPositiveNegativeTweets}>\r\n                  <p className=\"mapTweet\"><span className=\"mapTitle\">Map</span></p>\r\n                  {\r\n                          this.tweetCount !== this.totalTweets ? \r\n                          (\r\n                            <ReactLoading className=\"loading loadingCount\" type={\"cubes\"} color={\"#00BFA6\"} height={'8%'} width={'8%'} />\r\n                          )\r\n                          :\r\n                          (\r\n                            <Map mapData={this.countryCodeCount}></Map>\r\n                          )\r\n                  }\r\n                  <div className=\"top5positivetweets\">\r\n                      <p className=\"top5PositiveTitle\"><span className=\"leftborderpositivetitle\">Top 5 positive tweets</span></p>\r\n                      <div className=\"tweet-wrapper\">\r\n                      {\r\n                        this.tweetCount !== this.totalTweets ? \r\n                        (\r\n                          <ReactLoading className=\"loading\" type={\"bars\"} color={\"#00BFA6\"} height={'8%'} width={'8%'} />\r\n                        )\r\n                        :\r\n                        (\r\n                          this.top5PositiveTweets.toArray().map((obj,index) => {\r\n                            return <Tweet key={`tweet-${index}`} url={obj.element}/>\r\n                          })\r\n                        )\r\n                      }\r\n                      </div>\r\n                  </div>\r\n                                  \r\n                  <div className=\"top5negativetweets\">\r\n                      <p className=\"top5NegativeTitle\"><span className=\"leftbordernegativetitle\">Top 5 Negative tweets</span></p>\r\n                      <div className=\"tweet-wrapper\">\r\n                      {\r\n                        this.tweetCount !== this.totalTweets ? \r\n                        (\r\n                          <ReactLoading className=\"loading\" type={\"bars\"} color={\"#00BFA6\"} height={'8%'} width={'8%'} />\r\n                        )\r\n                        :\r\n                        (\r\n                          this.top5NegativeTweets.toArray().map((obj,index) => {\r\n                            return <Tweet key={`tweet-${index}`} url={obj.element}/>\r\n                          })\r\n                        )\r\n                      }\r\n                      </div>\r\n                    </div>\r\n              </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n// hide and show the result of search\r\n  hideSvg(event) {\r\n    event.stopPropagation();\r\n    this.refers.searchSVG.current.hideSvg();\r\n  }\r\n\r\n  showResult() {\r\n    let varShow = this.refers.getResult;\r\n    varShow.current.style.display = \"block\";\r\n  }\r\n\r\n  hideResult() {\r\n    let varHide = this.refers.getResult;\r\n    varHide.current.style.display = \"none\";\r\n    let varHide2 = this.refers.showPositiveNegativeTweets;\r\n    varHide2.current.style.display = \"none\";\r\n  }\r\n\r\n  showPositiveNegativeTweets() {\r\n    let varShow = this.refers.showPositiveNegativeTweets;\r\n    varShow.current.style.display = \"block\";\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Ali.e50a88ad.jpg\";","export default __webpack_public_path__ + \"static/media/Nikunj.2d158529.jpg\";","export default __webpack_public_path__ + \"static/media/Vaspar.b98026d9.jpg\";","export default __webpack_public_path__ + \"static/media/Rishabh.87f511be.jpg\";","export default __webpack_public_path__ + \"static/media/Vidit.a3e5e2ab.jpg\";","export default __webpack_public_path__ + \"static/media/profile-bg.6555544b.jpg\";","import React from \"react\";\r\nimport './Card.css';\r\n\r\nexport default function Card({item, bgImg}) {\r\n    return (\r\n      <div className=\"card\">\r\n        <img src={bgImg} className=\"card-img\" alt=\"card-img\"></img>\r\n        <img src={item.Imgurl} className=\"profile-img\" alt=\"profile-img\"></img>\r\n        <h1>{item.Name}</h1>\r\n        <p className=\"role\">{item.Role}</p>\r\n        <p className=\"about\">{item.About}</p>\r\n        {/* <a href={item.Giturl} className=\"btn\">contact</a> */}\r\n        <ul className=\"social-media\">\r\n          {/* <li><a href=\"\"><i class=\"fab fa-twitter-square\"></i></a></li> */}\r\n          <li>\r\n            <a href={item.Giturl} target=\"_blank\" rel=\"noreferrer\">\r\n              <i className=\"fab fa-github-square\"></i>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href={item.LinkedInurl} target=\"_blank\" rel=\"noreferrer\">\r\n              <i className=\"fab fa-linkedin\"></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from '../../components/Header/Header';\r\nimport './Team.css'\r\nimport imgAli from '../../assets/Profile/Ali.jpg'\r\nimport imgNikunj from '../../assets/Profile/Nikunj.jpg'\r\nimport imgVaspar from '../../assets/Profile/Vaspar.jpg'\r\nimport imgRishabh from '../../assets/Profile/Rishabh.jpg'\r\nimport imgVidit from '../../assets/Profile/Vidit.jpg'\r\nimport Profileurl from '../../assets/Profile/profile-bg.jpg'\r\nimport Card from '../../components/Card/Card';\r\n\r\nconst menus = [{text: 'Home', link: 'home'}, {text: 'Search', link: 'search'}, {text: 'Team', link: 'team'}];\r\n\r\n class Team extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n           profile : [\r\n              { id: 1, Name: 'Aliabbas', Role: 'Backend Developer', Imgurl: imgAli, Giturl: \"https://github.com/Aliabbas78692\", LinkedInurl:\"https://www.linkedin.com/in/aliabbas-attarwala-71b010176/\", About: \"Aliabbas Attarwala is pursing his BTech in Computer Engineering from CHARUSAT university.He is having good knowledge in the field s of web development and cloud computing.\" },\r\n              { id: 2, Name: 'Nikunj', Role: 'Frontend Developer', Imgurl: imgNikunj, Giturl: \"https://github.com/Nikunj018\", LinkedInurl:\"https://www.linkedin.com/in/nikunj-delavadiya-4544b518b/\", About: \"Nikunj Delavadiya is pursing his BTech in Computer Engineering from CHARUSAT university. UI/UX design and Animation attracts him a lot. To know about his project work, check out his Github profile.\" },\r\n              { id: 3, Name: 'Vaspar', Role: 'Full stack Developer', Imgurl: imgVaspar, Giturl: \"https://github.com/Vaspar-a\", LinkedInurl:\"https://www.linkedin.com/in/vaspar-a-9a189a121/\", About: \"Vaspar Ambapardiwala is pursing his BTech in Computer Engineering from CHARUSAT university.As an aspiring Full Stack Developer he wishes to develop applications that can be useful.\" },\r\n              { id: 4, Name: 'Rishabh', Role: 'Frontend Developer', Imgurl: imgRishabh, Giturl: \"https://github.com/Rain1213\", LinkedInurl:\"https://www.linkedin.com/in/rishabh-balse-ab5018207/\", About: \"Rishabh Balse is pursuing his BTech in Computer Engineering from CHARUSAT university. As an aspiring Android developer, Rishabh wishes to take on projects that helps the community in one way or another. Recommend him a good movie or an anime to make his day :)\" },\r\n              { id: 5, Name: 'Vidit', Role: 'Backend Developer', Imgurl: imgVidit, Giturl: \"https://github.com/Vidit631\", LinkedInurl:\"https://www.linkedin.com/in/vidit-dave-733862172/\", About: \"Vidit Dave is pursing his BTech in Computer Engineering from CHARUSAT university.As an aspiring Android developer, Vidit wishes to opt for industrial projects for gaining more experience of the real world.\"}\r\n           ]\r\n        }\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header menus={menus} />\r\n                <section>\r\n                    <div className = \"container\">\r\n                        <h1 className=\"heading\">Meet The Team</h1>\r\n                        <div className = \"card-wrapper\">\r\n                        {this.state.profile.map((item,index)=>{\r\n                            return <Card key={`card-${index}`} item={item} bgImg={Profileurl} />\r\n                        })}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Team;","import './App.css';\r\nimport Home from './pages/Home/Home';\r\nimport Search from './pages/Search/Search';\r\nimport Team from './pages/Team/Team';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Socket from 'socket-connector/client';\r\n\r\nfunction App() {\r\n  const clientSocket = new Socket(\"http://127.0.0.1:8000\");\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/home\" component={Home} />\r\n          <Route path=\"/search\" component={() => <Search clientSocket={clientSocket} />} />\r\n          <Route path=\"/team\" component={Team} />\r\n          <Redirect from=\"/\" to=\"/home\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}